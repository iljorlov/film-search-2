{"version":3,"sources":["components/GlobalStyles.ts","svg/sandwich.svg","svg/magnifier.svg","svg/sandwichClose.svg","components/Sidebar.tsx","components/Navigation.tsx","actions/PopularFilms/PopularFilmsActionTypes.ts","actions/PopularFilms/PopularFilmsActions.ts","svg/noPoster.svg","components/cards/Film.tsx","components/Pagination.tsx","components/Loader.tsx","pages/Home.tsx","actions/TopRatedFilms/TopRatedFilmsActionTypes.ts","actions/TopRatedFilms/TopRatedFilmsActions.ts","pages/TopRated.tsx","actions/UpcomingFilms/UpcomingFilmsActionTypes.ts","actions/UpcomingFilms/UpcomingFilmsActions.ts","pages/Upcoming.tsx","actions/Trending/TrendingActionTypes.ts","actions/Trending/TrendingActions.ts","pages/TrendingFilms.tsx","svg/noPerson.svg","components/cards/Person.tsx","pages/TrendingPeople.tsx","components/cards/TV.tsx","pages/TrendingTV.tsx","actions/IndividualFilm/ImagesActionTypes.ts","actions/IndividualFilm/IndividualFilmActionTypes.ts","components/PosterSlider.tsx","svg/star.svg","actions/IndividualFilm/CreditsActionTypes.ts","components/CastSlider.tsx","actions/IndividualFilm/RecommendedFilmsActionTypes.ts","components/NoRecommendations.tsx","components/RecommendedPagination.tsx","components/RecommendedFilms.tsx","actions/IndividualFilm/RecommendedFilmsActions.ts","pages/FilmPage.tsx","actions/IndividualFilm/IndividualFilmActions.ts","actions/IndividualFilm/ImagesActions.ts","actions/IndividualFilm/CreditsActions.ts","actions/IndividualPerson/IndividualPersonActionTypes.ts","actions/IndividualPerson/PersonImagesActionTypes.ts","actions/IndividualPerson/PersonExternalIdsActionTypes.ts","actions/IndividualPerson/PersonMovieCreditsActionTypes.ts","actions/IndividualPerson/PersonTVCreditsActionTypes.ts","components/cards/PersonFilm.tsx","components/LoaderSmall.tsx","components/NoFilmography.tsx","components/PersonFilms.tsx","components/cards/PersonTV.tsx","components/PersonTVs.tsx","components/FilmographyToShow.tsx","components/PersonFilmography.tsx","svg/IMDb.svg","svg/icons8-twitter.svg","svg/icons8-instagram-logo.svg","svg/icons8-facebook.svg","pages/PersonPage.tsx","actions/IndividualPerson/IndividualPersonActions.ts","actions/IndividualPerson/PersonImagesActions.ts","actions/IndividualPerson/PersonExternalIdsActions.ts","actions/IndividualPerson/PersonMovieCreditsActions.ts","actions/IndividualPerson/PersonTVCreditsActions.ts","actions/IndividualTV/IndividualTVActionTypes.ts","actions/IndividualTV/IndividualTVActions.ts","components/RecommendedTVs.tsx","pages/TVPage.tsx","actions/Search/SearchActionTypes.ts","actions/Search/SearchActions.ts","pages/SearchPage.tsx","App.tsx","reportWebVitals.ts","reducers/CreditsReducer.ts","reducers/ImagesReducer.ts","reducers/IndividualFilmReducer.ts","reducers/IndividualPersonReducers/IndividualPersonReducer.ts","reducers/IndividualPersonReducers/PersonExternalIdsReducer.ts","reducers/IndividualPersonReducers/PersonImagesReducer.ts","reducers/IndividualPersonReducers/PersonMoviesReducer.ts","reducers/IndividualPersonReducers/PersonTVsReducer.ts","reducers/IndividualPersonReducers/RootPersonReducer.ts","reducers/IndividualTVReducers/IndividualTVReducer.ts","reducers/PopularFilmsReducer.ts","reducers/RecommendedFilmsReducer.ts","reducers/SearchReducers/FilmSearchReducer.ts","reducers/SearchReducers/RootSearchReducer.ts","reducers/TopRatedFilmsReduces.ts","reducers/TrendingFilmsReducer.ts","reducers/TrendingPersonReducer.ts","reducers/TrendingTVReducer.ts","reducers/UpcomingFilmsReducer.ts","reducers/RootReducer.ts","Store.ts","index.tsx"],"names":["GlobalStyles","createGlobalStyle","Sidebar","sidebarToggle","SidebarComponent","id","initial","x","animate","transition","type","duration","SidebarSection","to","SidebarLink","styled","motion","div","Header","url","useState","setSidebarToggle","searchEntry","setSearchEntry","history","useHistory","useEffect","handleClick","event","target","body","document","addEventListener","removeEventListener","HeaderComponent","Nav","img","src","sandwichClose","sandwich","height","alt","onClick","SearchBar","placeholder","onSubmit","push","value","onChange","e","magnifier","form","nav","POPULAR_FILMS_LOADING","POPULAR_FILMS_FAIL","POPULAR_FILMS_SUCCESS","api_key","Film","title","vote_average","poster_path","release_date","setIsHovered","StyledFilm","onMouseEnter","onMouseLeave","noPoster","CardBg","className","Description","h5","split","length","splittedTitle","newTitle","i","join","shortenTitle","p","Pagination","currentPage","totalPages","filtration","windowsNumber","Math","ceil","paginationWindows","window","page","floor","currentWindow","setCurrentWindow","PaginationContainer","PaginationClicker","map","SelectedLinkContainer","LinkContainer","uuid","Loader","LoaderContainer","OuterDiv","InnerDiv","PulseAnimation","keyframes","Home","dispatch","useDispatch","location","useLocation","pathCurrentPage","parseInt","pathname","a","axios","get","res","payload","data","GetPopularFilms","scrollTo","popularFilms","useSelector","state","popular","total_pages","popularLoading","loading","PageHeader","FilmsList","Films","results","film","h2","TOP_RATED_FILMS_LOADING","TOP_RATED_FILMS_FAIL","TOP_RATED_FILMS_SUCCESS","TopRated","GetTopRatedFilms","topRatedFilms","topRated","topLoading","UPCOMING_FILMS_LOADING","UPCOMING_FILMS_FAIL","UPCOMING_FILMS_SUCCESS","Upcoming","GetUpcomingFilms","upcomingFilms","upcoming","upcomingLoading","TRENDING_FILMS_LOADING","TRENDING_FILMS_FAIL","TRENDING_FILMS_SUCCESS","TRENDING_TV_LOADING","TRENDING_TV_FAIL","TRENDING_TV_SUCCESS","TRENDING_PERSON_LOADING","TRENDING_PERSON_FAIL","TRENDING_PERSON_SUCCESS","TrendingFilms","timespan","GetTrendingFilms","trendingFilms","trendingFilmLoading","Person","name","profile_path","StyledPerson","noPerson","TrendingPeople","GetTrendingPeople","trendingPeople","trendingPersons","trendingPeopleLoading","person","TV","first_air_date","TrendingTV","GetTrendingTV","trendingTV","trendingTVLoading","tv","IMAGES_LOADING","IMAGES_FAIL","IMAGES_SUCCESS","INDIVIDUAL_FILM_LOADING","INDIVIDUAL_FILM_FAIL","INDIVIDUAL_FILM_SUCCESS","PosterSlider","pathFilmId","altPosterPath","posters","SliderContainer","Poster","CREDITS_LOADING","CREDITS_FAIL","CREDITS_SUCCESS","CastSlider","credits","toggle","crewIds","Slider","cast","SliderPhoto","uuidv4","crew","includes","RECOMMENDED_FILMS_LOADING","RECOMMENDED_FILMS_FAIL","RECOMMENDED_FILMS_SUCCESS","NoRecommendations","NoRecContainer","RecommendedPagination","top","filmId","left","behavior","RecommendedFilms","pathFilmIndex","pathPageIndex","recommendedRef","useRef","recRect","current","getBoundingClientRect","y","errorMsg","result","recommendedFilms","loadingRecs","ref","index","round","FilmPage","GetPosters","GetCredits","individualFilms","loadingFilms","MainSection","FilmIntroCentered","FilmName","SubnameInfo","Tagline","tagline","FilmDiv","LeftInfo","FilmIntro","Media","_","isEmpty","RatingDuration","RatingContainer","star","vote_count","mins","hours","minutes","getHours","runtime","GenresContainer","genres","genre","Genre","RightInfo","HeaderDiv","FilmDescription","overview","INDIVIDUAL_PERSON_LOADING","INDIVIDUAL_PERSON_FAIL","INDIVIDUAL_PERSON_SUCCESS","INDIVIDUAL_PERSON_IMAGES_LOADING","INDIVIDUAL_PERSON_IMAGES_FAIL","INDIVIDUAL_PERSON_IMAGES_SUCCESS","INDIVIDUAL_PERSON_EXID_LOADING","INDIVIDUAL_PERSON_EXID_FAIL","INDIVIDUAL_PERSON_EXID_SUCCESS","INDIVIDUAL_PERSON_MOVIE_CREDITS_LOADING","INDIVIDUAL_PERSON_MOVIE_CREDITS_FAIL","INDIVIDUAL_PERSON_MOVIE_CREDITS_SUCCESS","INDIVIDUAL_PERSON_TV_CREDITS_LOADING","INDIVIDUAL_PERSON_TV_CREDITS_FAIL","INDIVIDUAL_PERSON_TV_CREDITS_SUCCESS","PersonFilm","role","LoaderSmall","NoFilmography","NoFilmographyContainer","PersonFilms","moviesDataLoading","moviesData","roleType","pathPersonId","Number","CardsContainer","style","maxWidth","job","PersonTV","PersonTVs","tvsDataLoading","tvData","FilmographyToShow","mediaType","individualPerson","personMovies","tvDataLoading","personTVs","FilmographyToShowContainer","PersonFilmography","selectedRole","setSelectedRole","selectedArea","setSelectedArea","PersonFilmographyContainer","SelectionContainer","FilmTVSelection","FilmSelect","width","backgroundColor","fontWeight","borderTopRightRadius","TVSelect","borderTopLeftRadius","RoleSelection","ActorSelect","borderBottomRightRadius","CrewSelect","borderBottomLeftRadius","PersonPage","personId","GetPersonImages","GetPersonExternalIds","GetPersonMovies","GetPersonTVs","personData","personLoading","externalLinks","personExternalIds","PersonContainer","PersonHeader","PersonName","birthday","BirthDate","PersonBody","PersonLeft","PersonRight","biography","Biography","SubPhotoBio","place_of_birth","SubBioSection","SubBioHeader","BirthPlace","known_for_department","KnownFor","marginTop","ExternalIDs","instagram_id","ExternalLink","href","instagramIcon","facebook_id","facebookIcon","twitter_id","twitterIcon","imdb_id","IMDbIcon","INDIVIDUAL_TV_LOADING","INDIVIDUAL_TV_FAIL","INDIVIDUAL_TV_SUCCESS","RecommendedTVs","pathTVIndex","individualTV","recommendations","TVPage","pathTVId","pathPageId","tvId","recPage","GetIndividualTV","TVContainer","TVHeader","TVName","next_episode_to_air","air_date","TVBody","TVLeft","Duration","Seasons","number_of_seasons","Episodes","number_of_episodes","TVRight","OverviewContainer","TVDescription","FILMS_LOADING","FILMS_FAIL","FILMS_SUCCESS","SearchPage","pathSearchEntry","entry","GetFilmsList","searchData","films","dataLoading","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","defaultState","creditsReducer","action","postersReducer","individualFilmReducer","individualPersonReducer","personExternalIdsReducer","personImagesReducer","personMoviesReducer","personTVsReducer","RootPersonReducer","combineReducers","personImages","individualTVReducer","popularFilmsReducer","recommendedFilmsReducer","filmsSearchReducer","RootSearchReducer","topRatedFilmsReducer","trendingFilmsReducer","trendingPersonReducer","trendingTVReducer","upcomingFilmsReducer","RootReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.db05e09a.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyles = createGlobalStyle`\n    *{\n        margin: 0;\n        padding:0;\n        box-sizing: border-box;\n    }\n    html{\n        &::-webkit-scrollbar{\n            width: 0.5rem;\n        }\n        &::-webkit-scrollbar-thumb{\n            background-color: darkgrey;\n        }\n        &::-webkit-scrollbar-track {\n    background: white;\n  }\n    }\n    body{\n        font-family: 'Montserrat', sans-serif;\n        width: 100%;\n    }\n    h2{\n        font-size: 3rem;\n        font-family: 'Montserrat', sans-serif;\n        font-weight: lighter;\n        color: #333;\n    }\n    h3{\n        font-size: 1.3rem;\n        color: #333;\n        padding: 1.5rem 0rem;\n    }\n    h5{\n        font-size: 0.8rem;\n        color: #333;\n        padding: 0.5rem 0rem;\n    }\n    p{\n        font-size: 1rem;\n        line-height: 150%;\n        color: #696969;\n    }\n    a{\n        text-decoration: none;\n        color: #333;\n    }\n    img{\n        display: block;\n    }\n    input{\n        font-weight: bold;\n    font-family: \"Montserrat\", sans-serif;\n    }\n    li{\n      list-style: none;\n    }\n\n    .selected-role{\n        background-color: #C4C4C4;\n    }\n    .non-selected-role{\n        background-color: white;\n    }\n    \n`;\n\nexport default GlobalStyles;\n","export default __webpack_public_path__ + \"static/media/sandwich.4ea57a5d.svg\";","export default __webpack_public_path__ + \"static/media/magnifier.a814ecab.svg\";","export default __webpack_public_path__ + \"static/media/sandwichClose.93a1674d.svg\";","import React from \"react\";\nimport styled from \"styled-components\";\nimport { motion } from \"framer-motion\";\nimport { FC } from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\n\ninterface SidebarProps {\n  sidebarToggle: boolean;\n}\n\nexport const Sidebar: FC<SidebarProps> = ({ sidebarToggle }) => {\n  return (\n    <SidebarComponent\n      id=\"sidebar\"\n      initial={{ x: \"-100%\" }}\n      animate={{ x: sidebarToggle ? \"0\" : \"-100%\" }}\n      transition={{\n        type: \"tween\",\n        duration: 0.3,\n      }}\n    >\n      <SidebarSection>General:</SidebarSection>\n      <NavLink to={\"/popular/1\"}>\n        <SidebarLink>Popular</SidebarLink>\n      </NavLink>\n      <NavLink to={\"/top_rated/1\"}>\n        <SidebarLink>Top Rated</SidebarLink>\n      </NavLink>\n      <NavLink to={\"/upcoming/1\"}>\n        <SidebarLink>Upcoming</SidebarLink>\n      </NavLink>\n      <SidebarSection>Trending: </SidebarSection>\n      <NavLink to={\"/trending_films/1\"}>\n        <SidebarLink>Films</SidebarLink>\n      </NavLink>\n      <NavLink to={\"/trending_tvs/1\"}>\n        <SidebarLink>TV Shows</SidebarLink>\n      </NavLink>\n      <NavLink to={\"/trending_people/1\"}>\n        <SidebarLink>People</SidebarLink>\n      </NavLink>\n    </SidebarComponent>\n  );\n};\n\nconst SidebarSection = styled(motion.div)`\n  border-top: 1px solid rgba(255, 255, 255, 0.4);\n  padding-top: 1rem;\n`;\n\nconst SidebarComponent = styled(motion.div)`\n  width: 20vw;\n  min-width: 20rem;\n  height: 100vh;\n  background-color: #333;\n  color: white;\n  position: fixed;\n  z-index: 9;\n  padding: 3rem 2rem;\n`;\n\nconst SidebarLink = styled(motion.div)`\n  color: white;\n  margin: 2rem 1rem;\n`;\n","import React, { useState } from \"react\";\nimport sandwich from \"../svg/sandwich.svg\";\nimport magnifier from \"../svg/magnifier.svg\";\nimport sandwichClose from \"../svg/sandwichClose.svg\";\nimport styled from \"styled-components\";\nimport { motion } from \"framer-motion\";\nimport { Sidebar } from \"./Sidebar\";\n// import { useHistory } from 'react-router-dom'\nimport { useEffect } from \"react\";\nimport { FC } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\ninterface HeaderProps {\n  url: string;\n}\nexport const Header: FC<HeaderProps> = ({ url }) => {\n  const [sidebarToggle, setSidebarToggle] = useState(false);\n  const [searchEntry, setSearchEntry] = useState(\"\");\n  const history = useHistory();\n\n  useEffect(() => {\n    setSidebarToggle(false);\n  }, [url]);\n\n  const handleClick = (event: any) => {\n    if (event.target.id !== \"sidebar\") {\n      setSidebarToggle(false);\n    }\n  };\n\n  // to disable sidebar when clicked outside it\n  useEffect(() => {\n    if (sidebarToggle === true) {\n      const body = document.body;\n      body?.addEventListener(\"click\", handleClick);\n      return () => {\n        body?.removeEventListener(\"click\", handleClick);\n      };\n    }\n  }, [sidebarToggle]);\n\n  const handleToggleSidebar = () => {\n    setSidebarToggle(!sidebarToggle);\n  };\n\n  const submitForm = () => {\n    history.push(`/search/${searchEntry}/1`);\n  };\n\n  return (\n    <HeaderComponent>\n      <Nav>\n        <motion.img\n          src={sidebarToggle ? sandwichClose : sandwich}\n          height=\"30px\"\n          alt=\"toggle sidebar\"\n          onClick={handleToggleSidebar}\n        />\n      </Nav>\n      <SearchBar placeholder=\"search...\" onSubmit={submitForm}>\n        <input\n          type=\"text\"\n          value={searchEntry}\n          onChange={(e) => setSearchEntry(e.target.value)}\n        />\n        <button type=\"submit\">\n          <img src={magnifier} alt=\"search button\" />\n        </button>\n      </SearchBar>\n      <Sidebar sidebarToggle={sidebarToggle} />\n    </HeaderComponent>\n  );\n};\n\nconst SearchBar = styled.form`\n  z-index: 9;\n  width: 20rem;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  position: relative;\n  margin-right: 0.5rem;\n  input {\n    width: 100%;\n    height: 80%;\n    font-size: 1.5rem;\n    font-weight: normal;\n    border-radius: 2rem;\n    border: none;\n    box-shadow: 0px 0px 30px rgba(0, 0, 0, 0.2);\n    padding: 0 2.5rem;\n  }\n  button {\n    height: 2rem;\n    width: 2rem;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border: none;\n    /* padding: 0.5rem 0.5rem; */\n    border-radius: 50%;\n    cursor: pointer;\n    background: transparent;\n    position: absolute;\n    margin-left: 0.5rem;\n    left: 0;\n    img {\n      height: 1.5rem;\n      width: 1.5rem;\n    }\n  }\n`;\n\nconst HeaderComponent = styled(motion.div)`\n  display: flex;\n  justify-content: space-between;\n  background-color: #c4c4c4;\n  color: white;\n  position: fixed;\n  width: 100%;\n  height: 3rem;\n  z-index: 8;\n`;\nconst Nav = styled(motion.nav)`\n  display: flex;\n  align-items: center;\n  margin: 0px 1rem;\n  z-index: 10;\n  background-color: transparent;\n`;\n","export const POPULAR_FILMS_LOADING = \"POPULAR_FILMS_LOADING\";\nexport const POPULAR_FILMS_FAIL = \"POPULAR_FILMS_FAIL\";\nexport const POPULAR_FILMS_SUCCESS = \"POPULAR_FILMS_SUCCESS\";\n\nexport interface PopularFilmsLoading {\n  type: typeof POPULAR_FILMS_LOADING;\n}\nexport interface PopularFilmsFail {\n  type: typeof POPULAR_FILMS_FAIL;\n}\nexport interface PopularFilmsSuccess {\n  type: typeof POPULAR_FILMS_SUCCESS;\n  payload: FetchedPopularFilmsType;\n}\n\nexport type PopularFilmsDispatchTypes =\n  | PopularFilmsLoading\n  | PopularFilmsFail\n  | PopularFilmsSuccess;\n\nexport type FilmType = {\n  genre_ids: number[];\n  id: number;\n  original_title: string;\n  overview: string;\n  popularity: number;\n  poster_path: string;\n  release_date: string;\n  title: string;\n  backdrop_path: string;\n  video: boolean;\n  vote_average: number;\n  vote_count: number;\n  adult: string;\n  original_language: string;\n};\n\nexport type FetchedPopularFilmsType = {\n  page: number;\n  results: FilmType[];\n  total_pages: number;\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport {\n  POPULAR_FILMS_FAIL,\n  POPULAR_FILMS_LOADING,\n  POPULAR_FILMS_SUCCESS,\n} from \"./PopularFilmsActionTypes\";\n\nconst api_key = \"6650890bc34e6b3eeefaf36590d2a82c\";\n\nexport const GetPopularFilms =\n  (page: number = 1) =>\n  async (dispatch: Dispatch) => {\n    try {\n      dispatch({\n        type: POPULAR_FILMS_LOADING,\n      });\n\n      const res = await axios.get(\n        `https://api.themoviedb.org/3/movie/popular?api_key=${api_key}&language=en-US&page=${page}`\n      );\n\n      dispatch({\n        type: POPULAR_FILMS_SUCCESS,\n        payload: res.data,\n      });\n    } catch (error) {\n      dispatch({\n        type: POPULAR_FILMS_FAIL,\n      });\n    }\n  };\n","export default __webpack_public_path__ + \"static/media/noPoster.4e9ffc2b.svg\";","import { FC } from \"react\";\nimport styled from \"styled-components\";\nimport { motion } from \"framer-motion\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport noPoster from \"../../svg/noPoster.svg\";\n\ninterface FilmProps {\n  title: string;\n  vote_average: number;\n  poster_path: string;\n  release_date: string;\n  id: number;\n}\n\nexport const Film: FC<FilmProps> = ({\n  title,\n  vote_average,\n  poster_path,\n  release_date,\n  id,\n}) => {\n  const [isHovered, setIsHovered] = useState(false);\n\n  const history = useHistory();\n\n  const shortenTitle = (title: string) => {\n    let splittedTitle = title.split(\" \");\n    let newTitle = [];\n    for (let i = 0; i < 9; i++) {\n      if (i === 8) {\n        newTitle.push(`${splittedTitle[i]}...`);\n        break;\n      }\n      newTitle.push(`${splittedTitle[i]} `);\n    }\n    return newTitle.join(\"\");\n  };\n\n  return (\n    <StyledFilm\n      onMouseEnter={() => setIsHovered(true)}\n      onMouseLeave={() => setIsHovered(false)}\n      onClick={() => history.push(`/film/${id}/1`)}\n    >\n      <img\n        src={\n          poster_path\n            ? `https://image.tmdb.org/t/p/w300${poster_path}`\n            : noPoster\n        }\n        alt=\"poster\"\n      />\n      <CardBg className=\"card-bg\" />\n      <Description className=\"description\">\n        <motion.h5>\n          {title.split(\"\").length < 60 ? title : shortenTitle(title)}\n        </motion.h5>\n        <motion.p>{vote_average}/10</motion.p>\n      </Description>\n    </StyledFilm>\n  );\n};\n\nconst CardBg = styled(motion.div)`\n  width: calc(100% - 2px);\n  background-color: #606060;\n  position: absolute;\n  border-radius: 0.5rem;\n  height: 1%;\n  top: 10px;\n  transition: all 0.2s ease;\n`;\n\nconst StyledFilm = styled(motion.div)`\n  border-radius: 1rem;\n  z-index: 5;\n  cursor: pointer;\n  display: flex;\n  position: relative;\n  flex-direction: column;\n  background-color: transparent;\n  align-items: center;\n  transition: all 0.1s ease;\n  &:hover {\n    transform: scale(1.015);\n    .card-bg {\n      height: 100%;\n    }\n    h5 {\n      color: #e1e1e1;\n    }\n    p {\n      color: #d0d0d0;\n    }\n  }\n  img {\n    width: 100%;\n    height: auto;\n    object-fit: cover;\n    border-radius: 0.5rem;\n    box-shadow: 0px 5px 20px rgba(0, 0, 0, 0.2);\n    z-index: 10;\n  }\n  p {\n    font-size: smaller;\n    text-align: center;\n  }\n`;\n\nconst Description = styled(motion.div)`\n  display: flex;\n  padding: 0px 10px;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  z-index: 10;\n  max-height: 5rem;\n  text-align: center;\n`;\n","import { motion } from \"framer-motion\";\nimport React, { useState } from \"react\";\nimport { FC } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { v4 as uuid } from \"uuid\";\n\ninterface PaginationProps {\n  currentPage: number | undefined;\n  totalPages: number | undefined;\n  filtration: string;\n}\n\nexport const Pagination: FC<PaginationProps> = ({\n  currentPage,\n  totalPages,\n  filtration,\n}) => {\n  const windowsNumber = Math.ceil(totalPages! / 10);\n  const paginationWindows: any = [];\n  for (let window = 0; window < windowsNumber; window++) {\n    paginationWindows.push([]);\n    for (let page = 1; page < 11; page++) {\n      if (page + window * 10 > totalPages!) {\n        break;\n      }\n      paginationWindows[paginationWindows.length - 1].push(page + window * 10);\n    }\n  }\n\n  const [currentWindow, setCurrentWindow] = useState(\n    currentPage! % 10 !== 0\n      ? Math.floor(currentPage! / 10)\n      : Math.floor(currentPage! / 10) - 1\n  );\n\n  const handlePreviousClick = () => {\n    if (currentWindow > 0) {\n      setCurrentWindow(currentWindow - 1);\n    }\n  };\n  const handleNextClick = () => {\n    if (currentWindow < windowsNumber - 1) {\n      setCurrentWindow(currentWindow + 1);\n    }\n  };\n\n  return (\n    <PaginationContainer className=\"pagination\">\n      <PaginationClicker onClick={handlePreviousClick}>&lt;</PaginationClicker>\n      {paginationWindows[currentWindow].map((page: number) => (\n        <Link key={uuid()} to={`/${filtration}/${page}`}>\n          {currentPage === page ? (\n            <SelectedLinkContainer> {page} </SelectedLinkContainer>\n          ) : (\n            <LinkContainer> {page} </LinkContainer>\n          )}\n        </Link>\n      ))}\n      <PaginationClicker onClick={handleNextClick}>&gt;</PaginationClicker>\n    </PaginationContainer>\n  );\n};\n\nconst PaginationContainer = styled(motion.nav)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 3rem 0rem;\n  width: 100%;\n  overflow: hidden;\n`;\n\nconst PaginationClicker = styled(motion.div)`\n  cursor: pointer;\n  margin: 0rem 1rem;\n`;\n\nconst LinkContainer = styled(motion.div)`\n  margin: 1rem 0.5rem;\n  width: 1rem;\n  text-align: center;\n  @media (max-width: 768px) {\n    width: 1rem;\n  }\n`;\n\nconst SelectedLinkContainer = styled(motion.div)`\n  margin: 1rem 0.5rem;\n  width: 1rem;\n  text-align: center;\n  color: #333;\n  font-weight: bold;\n  font-size: larger;\n  @media (max-width: 768px) {\n  }\n`;\n","import React from \"react\";\nimport styled, { keyframes } from \"styled-components\";\n\nexport const Loader = () => {\n  return (\n    <LoaderContainer>\n      <OuterDiv>\n        <InnerDiv></InnerDiv>\n      </OuterDiv>\n    </LoaderContainer>\n  );\n};\n\nconst PulseAnimation = keyframes`\n  0% { transform: scale(1) }\n  50% { transform: scale(1.75) }\n  100% { transform: scale(1) }\n`;\n\nconst LoaderContainer = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nconst OuterDiv = styled.div`\n  width: 3rem;\n  height: 3rem;\n  border-radius: 50%;\n  background-color: #a1a1a1;\n  position: relative;\n  animation-name: ${PulseAnimation};\n  animation-duration: 1s;\n  animation-iteration-count: infinite;\n`;\nconst InnerDiv = styled.div`\n  width: 2rem;\n  height: 2rem;\n  position: absolute;\n  top: 0.5rem;\n  left: 0.5rem;\n  border-radius: 50%;\n  background-color: #6f6f6f;\n  animation-name: ${PulseAnimation};\n  animation-duration: 1.5s;\n  animation-iteration-count: infinite;\n  animation-delay: 1.5s;\n`;\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { GetPopularFilms } from \"../actions/PopularFilms/PopularFilmsActions\";\nimport { Film } from \"../components/cards/Film\";\nimport { RootStore } from \"../Store\";\nimport { motion } from \"framer-motion\";\nimport { FilmType } from \"../actions/PopularFilms/PopularFilmsActionTypes\";\nimport { Pagination } from \"../components/Pagination\";\nimport { useLocation } from \"react-router-dom\";\nimport { Loader } from \"../components/Loader\";\n\nexport const Home = () => {\n  const dispatch = useDispatch();\n\n  // get current page number to pass into Pagination container and to dispatch\n  const location = useLocation();\n  const pathCurrentPage = parseInt(location.pathname.split(\"/\")[2]);\n\n  useEffect(() => {\n    dispatch(GetPopularFilms(pathCurrentPage));\n    window.scrollTo(0, 0);\n  }, [dispatch, pathCurrentPage]);\n\n  const popularFilms = useSelector(\n    (state: RootStore) => state.popularFilms.popular\n  );\n  const currentPage = useSelector(\n    (state: RootStore) => state.popularFilms.popular?.page\n  );\n  const totalPages = useSelector(\n    (state: RootStore) => state.popularFilms.popular?.total_pages\n  );\n  const popularLoading = useSelector(\n    (state: RootStore) => state.popularFilms.loading\n  );\n\n  return (\n    <>\n      {popularLoading ? (\n        <Loader />\n      ) : (\n        <>\n          {popularFilms && currentPage && totalPages && (\n            <>\n              <PageHeader>Popular: </PageHeader>\n              <FilmsList className=\"page\">\n                <Films>\n                  {popularFilms?.results.map((film: FilmType) => (\n                    <Film\n                      key={film.id}\n                      id={film.id}\n                      title={film.title}\n                      vote_average={film.vote_average}\n                      poster_path={film.poster_path}\n                      release_date={film.release_date}\n                    />\n                  ))}\n                </Films>\n              </FilmsList>\n              <Pagination\n                currentPage={currentPage}\n                totalPages={totalPages}\n                filtration={\"popular\"}\n              />\n            </>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nconst PageHeader = styled.h2`\n  padding: 5rem 2rem 2rem 2rem;\n  text-align: left;\n  width: 100%;\n`;\n\nexport const FilmsList = styled(motion.div)`\n  padding: 2rem 5rem;\n  h2 {\n    padding: 5rem 0rem;\n  }\n`;\n\nexport const Films = styled(motion.div)`\n  min-height: 80vh;\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));\n  grid-column-gap: 2rem;\n  grid-row-gap: 4rem;\n  @media (min-width: 768px) {\n    width: 100%;\n  }\n`;\n","export const TOP_RATED_FILMS_LOADING = \"TOP_RATED_FILMS_LOADING\";\nexport const TOP_RATED_FILMS_FAIL = \"TOP_RATED_FILMS_FAIL\";\nexport const TOP_RATED_FILMS_SUCCESS = \"TOP_RATED_FILMS_SUCCESS\";\n\nexport interface TopRatedFilmsLoading {\n  type: typeof TOP_RATED_FILMS_LOADING;\n}\nexport interface TopRatedFilmsFail {\n  type: typeof TOP_RATED_FILMS_FAIL;\n}\nexport interface TopRatedFilmsSuccess {\n  type: typeof TOP_RATED_FILMS_SUCCESS;\n  payload: FetchedTopRatedFilmsType;\n}\n\nexport type TopRatedFilmsDispatchTypes =\n  | TopRatedFilmsLoading\n  | TopRatedFilmsFail\n  | TopRatedFilmsSuccess;\n\nexport type FilmType = {\n  genre_ids: number[];\n  id: number;\n  original_title: string;\n  overview: string;\n  popularity: number;\n  poster_path: string;\n  release_date: string;\n  title: string;\n  backdrop_path: string;\n  video: boolean;\n  vote_average: number;\n  vote_count: number;\n  adult: string;\n  original_language: string;\n};\n\nexport type FetchedTopRatedFilmsType = {\n  page: number;\n  results: FilmType[];\n  total_pages: number;\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport {\n  TOP_RATED_FILMS_FAIL,\n  TOP_RATED_FILMS_LOADING,\n  TOP_RATED_FILMS_SUCCESS,\n} from \"./TopRatedFilmsActionTypes\";\n\nconst api_key = \"6650890bc34e6b3eeefaf36590d2a82c\";\n\nexport const GetTopRatedFilms =\n  (page: number = 1) =>\n  async (dispatch: Dispatch) => {\n    try {\n      dispatch({\n        type: TOP_RATED_FILMS_LOADING,\n      });\n\n      const res = await axios.get(\n        `https://api.themoviedb.org/3/movie/top_rated?api_key=${api_key}&language=en-US&page=${page}`\n      );\n\n      dispatch({\n        type: TOP_RATED_FILMS_SUCCESS,\n        payload: res.data,\n      });\n    } catch (error) {\n      dispatch({\n        type: TOP_RATED_FILMS_FAIL,\n      });\n    }\n  };\n\n// https://api.themoviedb.org/3/movie/upcoming?api_key=6650890bc34e6b3eeefaf36590d2a82c&language=en-US&page=1\n// https://api.themoviedb.org/3/movie/popular?api_key=6650890bc34e6b3eeefaf36590d2a82c&language=en-US&page=1\n// https://api.themoviedb.org/3/movie/top_rated?api_key=6650890bc34e6b3eeefaf36590d2a82c&language=en-US&page=1\n// https://api.themoviedb.org/3/trending/all/day?api_key=6650890bc34e6b3eeefaf36590d2a82c\n// https://api.themoviedb.org/3/trending/all/week?api_key=6650890bc34e6b3eeefaf36590d2a82c\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { FilmType } from \"../actions/PopularFilms/PopularFilmsActionTypes\";\nimport { GetTopRatedFilms } from \"../actions/TopRatedFilms/TopRatedFilmsActions\";\nimport { Film } from \"../components/cards/Film\";\nimport { Loader } from \"../components/Loader\";\nimport { Pagination } from \"../components/Pagination\";\nimport { RootStore } from \"../Store\";\nimport { FilmsList, Films } from \"./Home\";\n\nexport const TopRated = () => {\n  const dispatch = useDispatch();\n\n  const location = useLocation();\n  const pathCurrentPage = parseInt(location.pathname.split(\"/\")[2]);\n\n  useEffect(() => {\n    dispatch(GetTopRatedFilms(pathCurrentPage));\n    window.scrollTo(0, 0);\n  }, [dispatch, pathCurrentPage]);\n\n  const topRatedFilms = useSelector(\n    (state: RootStore) => state.topRatedFilms.topRated\n  );\n  const currentPage = useSelector(\n    (state: RootStore) => state.topRatedFilms.topRated?.page\n  );\n  const totalPages = useSelector(\n    (state: RootStore) => state.topRatedFilms.topRated?.total_pages\n  );\n  const topLoading = useSelector(\n    (state: RootStore) => state.topRatedFilms.loading\n  );\n\n  return (\n    <>\n      {topLoading ? (\n        <Loader />\n      ) : (\n        <>\n          {topRatedFilms && (\n            <>\n              <PageHeader>Top Rated: </PageHeader>\n              <FilmsList className=\"page\">\n                <Films>\n                  {topRatedFilms?.results.map((film: FilmType) => (\n                    <Film\n                      key={film.id}\n                      id={film.id}\n                      title={film.title}\n                      vote_average={film.vote_average}\n                      poster_path={film.poster_path}\n                      release_date={film.release_date}\n                    />\n                  ))}\n                </Films>\n              </FilmsList>\n              <Pagination\n                currentPage={currentPage}\n                totalPages={totalPages}\n                filtration={\"top_rated\"}\n              />\n            </>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nconst PageHeader = styled.h2`\n  padding: 5rem 2rem 2rem 2rem;\n  text-align: left;\n  width: 100%;\n`;\n","export const UPCOMING_FILMS_LOADING = \"UPCOMING_FILMS_LOADING\";\nexport const UPCOMING_FILMS_FAIL = \"UPCOMING_FILMS_FAIL\";\nexport const UPCOMING_FILMS_SUCCESS = \"UPCOMING_FILMS_SUCCESS\";\n\nexport interface UpcomingFilmsLoading {\n  type: typeof UPCOMING_FILMS_LOADING;\n}\nexport interface UpcomingFilmsFail {\n  type: typeof UPCOMING_FILMS_FAIL;\n}\nexport interface UpcomingFilmsSuccess {\n  type: typeof UPCOMING_FILMS_SUCCESS;\n  payload: FetchedUpcomingFilmsType;\n}\n\nexport type UpcomingFilmsDispatchTypes =\n  | UpcomingFilmsLoading\n  | UpcomingFilmsFail\n  | UpcomingFilmsSuccess;\n\nexport type FilmType = {\n  genre_ids: number[];\n  id: number;\n  original_title: string;\n  overview: string;\n  popularity: number;\n  poster_path: string;\n  release_date: string;\n  title: string;\n  backdrop_path: string;\n  video: boolean;\n  vote_average: number;\n  vote_count: number;\n  adult: string;\n  original_language: string;\n};\n\nexport type FetchedUpcomingFilmsType = {\n  page: number;\n  results: FilmType[];\n  total_pages: number;\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport {\n  UPCOMING_FILMS_FAIL,\n  UPCOMING_FILMS_LOADING,\n  UPCOMING_FILMS_SUCCESS,\n} from \"./UpcomingFilmsActionTypes\";\n\nconst api_key = \"6650890bc34e6b3eeefaf36590d2a82c\";\n\nexport const GetUpcomingFilms =\n  (page: number = 1) =>\n  async (dispatch: Dispatch) => {\n    try {\n      dispatch({\n        type: UPCOMING_FILMS_LOADING,\n      });\n\n      const res = await axios.get(\n        `https://api.themoviedb.org/3/movie/upcoming?api_key=${api_key}&language=en-US&page=${page}`\n      );\n\n      dispatch({\n        type: UPCOMING_FILMS_SUCCESS,\n        payload: res.data,\n      });\n    } catch (error) {\n      dispatch({\n        type: UPCOMING_FILMS_FAIL,\n      });\n    }\n  };\n\n// https://api.themoviedb.org/3/movie/upcoming?api_key=6650890bc34e6b3eeefaf36590d2a82c&language=en-US&page=1\n// https://api.themoviedb.org/3/movie/popular?api_key=6650890bc34e6b3eeefaf36590d2a82c&language=en-US&page=1\n// https://api.themoviedb.org/3/movie/top_rated?api_key=6650890bc34e6b3eeefaf36590d2a82c&language=en-US&page=1\n// https://api.themoviedb.org/3/trending/all/day?api_key=6650890bc34e6b3eeefaf36590d2a82c\n// https://api.themoviedb.org/3/trending/all/week?api_key=6650890bc34e6b3eeefaf36590d2a82c\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { FilmType } from \"../actions/PopularFilms/PopularFilmsActionTypes\";\nimport { GetUpcomingFilms } from \"../actions/UpcomingFilms/UpcomingFilmsActions\";\nimport { Film } from \"../components/cards/Film\";\nimport { Loader } from \"../components/Loader\";\nimport { Pagination } from \"../components/Pagination\";\nimport { RootStore } from \"../Store\";\nimport { FilmsList, Films } from \"./Home\";\n\nexport const Upcoming = () => {\n  const dispatch = useDispatch();\n\n  const location = useLocation();\n  const pathCurrentPage = parseInt(location.pathname.split(\"/\")[2]);\n\n  useEffect(() => {\n    dispatch(GetUpcomingFilms(pathCurrentPage));\n    window.scrollTo(0, 0);\n  }, [dispatch, pathCurrentPage]);\n\n  const topRatedFilms = useSelector(\n    (state: RootStore) => state.upcomingFilms.upcoming\n  );\n  const currentPage = useSelector(\n    (state: RootStore) => state.upcomingFilms.upcoming?.page\n  );\n  const totalPages = useSelector(\n    (state: RootStore) => state.upcomingFilms.upcoming?.total_pages\n  );\n  const upcomingLoading = useSelector(\n    (state: RootStore) => state.upcomingFilms.loading\n  );\n\n  return (\n    <>\n      {upcomingLoading ? (\n        <Loader />\n      ) : (\n        <>\n          {topRatedFilms && (\n            <>\n              <PageHeader>Upcoming: </PageHeader>\n              <FilmsList className=\"page\">\n                <Films>\n                  {topRatedFilms?.results.map((film: FilmType) => (\n                    <Film\n                      key={film.id}\n                      title={film.title}\n                      vote_average={film.vote_average}\n                      poster_path={film.poster_path}\n                      release_date={film.release_date}\n                      id={film.id}\n                    />\n                  ))}\n                </Films>\n              </FilmsList>\n              <Pagination\n                currentPage={currentPage}\n                totalPages={totalPages}\n                filtration={\"upcoming\"}\n              />\n            </>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nconst PageHeader = styled.h2`\n  padding: 5rem 2rem 2rem 2rem;\n  text-align: left;\n  width: 100%;\n`;\n","// ========== TRENDING FILMS TYPES ============\nexport const TRENDING_FILMS_LOADING = \"TRENDING_FILMS_LOADING\";\nexport const TRENDING_FILMS_FAIL = \"TRENDING_FILMS_FAIL\";\nexport const TRENDING_FILMS_SUCCESS = \"TRENDING_FILMS_SUCCESS\";\n\nexport interface TrendingFilmsLoading {\n  type: typeof TRENDING_FILMS_LOADING;\n}\nexport interface TrendingFilmsFail {\n  type: typeof TRENDING_FILMS_FAIL;\n}\nexport interface TrendingFilmsSuccess {\n  type: typeof TRENDING_FILMS_SUCCESS;\n  payload: FetchedTrendingFilmsType;\n}\nexport type TrendingFilmsDispatchTypes =\n  | TrendingFilmsLoading\n  | TrendingFilmsFail\n  | TrendingFilmsSuccess;\n\nexport type FilmType = {\n  genre_ids: number[];\n  id: number;\n  original_title: string;\n  overview: string;\n  popularity: number;\n  poster_path: string;\n  release_date: string;\n  title: string;\n  backdrop_path: string;\n  video: boolean;\n  vote_average: number;\n  vote_count: number;\n  adult: string;\n  original_language: string;\n};\nexport type FetchedTrendingFilmsType = {\n  page: number;\n  results: FilmType[];\n  total_pages: number;\n};\n\n// ========== TRENDING TV TYPES ============\nexport const TRENDING_TV_LOADING = \"TRENDING_TV_LOADING\";\nexport const TRENDING_TV_FAIL = \"TRENDING_TV_FAIL\";\nexport const TRENDING_TV_SUCCESS = \"TRENDING_TV_SUCCESS\";\n\nexport interface TrendingTvLoading {\n  type: typeof TRENDING_TV_LOADING;\n}\nexport interface TrendingTvFail {\n  type: typeof TRENDING_TV_FAIL;\n}\nexport interface TrendingTvSuccess {\n  type: typeof TRENDING_TV_SUCCESS;\n  payload: FetchedTrendingTvType;\n}\nexport type TrendingTvDispatchTypes =\n  | TrendingTvLoading\n  | TrendingTvFail\n  | TrendingTvSuccess;\n\nexport type TvType = {\n  first_air_date: string;\n  name: string;\n  backdrop_path: string;\n  genre_ids: number[];\n  vote_count: number;\n  original_language: string;\n  vote_average: number;\n  poster_path: string;\n  original_name: string;\n  origin_country: string[];\n  id: number;\n  overview: string;\n  popularity: number;\n  media_type: string;\n};\nexport type FetchedTrendingTvType = {\n  page: number;\n  results: TvType[];\n  total_pages: number;\n};\n\n// ========== TRENDING PERSON TYPES ============\nexport const TRENDING_PERSON_LOADING = \"TRENDING_PERSON_LOADING\";\nexport const TRENDING_PERSON_FAIL = \"TRENDING_PERSON_FAIL\";\nexport const TRENDING_PERSON_SUCCESS = \"TRENDING_PERSON_SUCCESS\";\n\nexport interface TrendingPersonLoading {\n  type: typeof TRENDING_PERSON_LOADING;\n}\nexport interface TrendingPersonFail {\n  type: typeof TRENDING_PERSON_FAIL;\n}\nexport interface TrendingPersonSuccess {\n  type: typeof TRENDING_PERSON_SUCCESS;\n  payload: FetchedTrendingPersonType;\n}\nexport type TrendingPersonDispatchTypes =\n  | TrendingPersonLoading\n  | TrendingPersonFail\n  | TrendingPersonSuccess;\n\nexport type PersonType = {\n  known_for_department: string;\n  profile_path: string;\n  name: string;\n  adult: string;\n  known_for: FilmType[];\n  id: number;\n  gender: number;\n  popularity: number;\n  media_type: string;\n};\nexport type FetchedTrendingPersonType = {\n  page: number;\n  results: PersonType[];\n  total_pages: number;\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport {\n  TRENDING_FILMS_FAIL,\n  TRENDING_FILMS_LOADING,\n  TRENDING_FILMS_SUCCESS,\n  TRENDING_PERSON_FAIL,\n  TRENDING_PERSON_LOADING,\n  TRENDING_PERSON_SUCCESS,\n  TRENDING_TV_FAIL,\n  TRENDING_TV_LOADING,\n  TRENDING_TV_SUCCESS,\n} from \"./TrendingActionTypes\";\n\nconst api_key = \"6650890bc34e6b3eeefaf36590d2a82c\";\n\nexport const GetTrendingFilms =\n  (page: number = 1, timespan: string = \"day\") =>\n  async (dispatch: Dispatch) => {\n    try {\n      dispatch({\n        type: TRENDING_FILMS_LOADING,\n      });\n\n      const res = await axios.get(\n        `https://api.themoviedb.org/3/trending/movie/${timespan}?api_key=${api_key}&page=${page}`\n      );\n\n      dispatch({\n        type: TRENDING_FILMS_SUCCESS,\n        payload: res.data,\n      });\n    } catch (error) {\n      dispatch({\n        type: TRENDING_FILMS_FAIL,\n      });\n    }\n  };\n\nexport const GetTrendingPeople =\n  (page: number = 1, timespan: string = \"day\") =>\n  async (dispatch: Dispatch) => {\n    try {\n      dispatch({\n        type: TRENDING_PERSON_LOADING,\n      });\n\n      const res = await axios.get(\n        `https://api.themoviedb.org/3/person/popular?api_key=${api_key}&page=${page}`\n      );\n\n      dispatch({\n        type: TRENDING_PERSON_SUCCESS,\n        payload: res.data,\n      });\n    } catch (error) {\n      dispatch({\n        type: TRENDING_PERSON_FAIL,\n      });\n    }\n  };\n\nexport const GetTrendingTV =\n  (page: number = 1, timespan: string = \"day\") =>\n  async (dispatch: Dispatch) => {\n    try {\n      dispatch({\n        type: TRENDING_TV_LOADING,\n      });\n\n      const res = await axios.get(\n        `https://api.themoviedb.org/3/trending/tv/${timespan}?api_key=${api_key}&page=${page}`\n      );\n\n      dispatch({\n        type: TRENDING_TV_SUCCESS,\n        payload: res.data,\n      });\n    } catch (error) {\n      dispatch({\n        type: TRENDING_TV_FAIL,\n      });\n    }\n  };\n\n// https://api.themoviedb.org/3/movie/upcoming?api_key=6650890bc34e6b3eeefaf36590d2a82c&language=en-US&page=1\n// https://api.themoviedb.org/3/movie/popular?api_key=6650890bc34e6b3eeefaf36590d2a82c&language=en-US&page=1\n// https://api.themoviedb.org/3/movie/top_rated?api_key=6650890bc34e6b3eeefaf36590d2a82c&language=en-US&page=1\n// https://api.themoviedb.org/3/trending/movie/day?api_key=6650890bc34e6b3eeefaf36590d2a82c\n// https://api.themoviedb.org/3/trending/all/week?api_key=6650890bc34e6b3eeefaf36590d2a82c\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { FilmType } from \"../actions/PopularFilms/PopularFilmsActionTypes\";\nimport { GetTrendingFilms } from \"../actions/Trending/TrendingActions\";\nimport { Film } from \"../components/cards/Film\";\nimport { Loader } from \"../components/Loader\";\nimport { Pagination } from \"../components/Pagination\";\nimport { RootStore } from \"../Store\";\nimport { FilmsList, Films } from \"./Home\";\n\nexport const TrendingFilms = () => {\n  const dispatch = useDispatch();\n\n  const location = useLocation();\n  const pathCurrentPage = parseInt(location.pathname.split(\"/\")[2]);\n\n  useEffect(() => {\n    dispatch(GetTrendingFilms(pathCurrentPage));\n    window.scrollTo(0, 0);\n  }, [dispatch, pathCurrentPage]);\n\n  const trendingFilms = useSelector(\n    (state: RootStore) => state.trendingFilms.trendingFilms\n  );\n  const currentPage = useSelector(\n    (state: RootStore) => state.trendingFilms.trendingFilms?.page\n  );\n  const totalPages = useSelector(\n    (state: RootStore) => state.trendingFilms.trendingFilms?.total_pages\n  );\n  const trendingFilmLoading = useSelector(\n    (state: RootStore) => state.trendingFilms.loading\n  );\n\n  return (\n    <>\n      {trendingFilmLoading ? (\n        <Loader />\n      ) : (\n        <>\n          {trendingFilms && (\n            <>\n              <PageHeader>Trending Films: </PageHeader>\n              <FilmsList className=\"page\">\n                <Films>\n                  {trendingFilms?.results.map((film: FilmType) => (\n                    <Film\n                      key={film.id}\n                      id={film.id}\n                      title={film.title}\n                      vote_average={film.vote_average}\n                      poster_path={film.poster_path}\n                      release_date={film.release_date}\n                    />\n                  ))}\n                </Films>\n              </FilmsList>\n              <Pagination\n                currentPage={currentPage}\n                totalPages={totalPages}\n                filtration={\"trending_films\"}\n              />\n            </>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nconst PageHeader = styled.h2`\n  padding: 5rem 2rem 2rem 2rem;\n  text-align: left;\n  width: 100%;\n`;\n","export default __webpack_public_path__ + \"static/media/noPerson.d2380efa.svg\";","import { FC } from \"react\";\nimport styled from \"styled-components\";\nimport { motion } from \"framer-motion\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport noPerson from \"../../svg/noPerson.svg\";\nimport { FilmType } from \"../../actions/TopRatedFilms/TopRatedFilmsActionTypes\";\n\ninterface PersonProps {\n  name: string;\n  profile_path: string;\n  known_for?: FilmType[];\n  id: number;\n}\n\nexport const Person: FC<PersonProps> = ({ name, profile_path, id }) => {\n  const [isHovered, setIsHovered] = useState(false);\n  const history = useHistory();\n\n  return (\n    <StyledPerson\n      onMouseEnter={() => setIsHovered(true)}\n      onMouseLeave={() => setIsHovered(false)}\n      onClick={() => history.push(`/person/${id}`)}\n    >\n      <img\n        src={\n          profile_path\n            ? `https://image.tmdb.org/t/p/w300${profile_path}`\n            : noPerson\n        }\n        alt=\"poster\"\n      />\n      <CardBg className=\"card-bg\" />\n      <Description className=\"description\">\n        <motion.h5>{name}</motion.h5>\n      </Description>\n    </StyledPerson>\n  );\n};\n\nconst CardBg = styled(motion.div)`\n  width: calc(100% - 2px);\n  background-color: #606060;\n  position: absolute;\n  border-radius: 0.5rem;\n  height: 1%;\n  top: 10px;\n  transition: all 0.2s ease;\n`;\n\nconst StyledPerson = styled(motion.div)`\n  border-radius: 1rem;\n  z-index: 5;\n  cursor: pointer;\n  display: flex;\n  position: relative;\n  flex-direction: column;\n  background-color: transparent;\n  align-items: center;\n  transition: all 0.1s ease-in;\n  &:hover {\n    transform: scale(1.015);\n    .card-bg {\n      height: 100%;\n    }\n    h5 {\n      color: #e1e1e1;\n    }\n    p {\n      color: #d0d0d0;\n    }\n  }\n  img {\n    width: 100%;\n    object-fit: cover;\n    border-radius: 0.5rem;\n    box-shadow: 0px 5px 20px rgba(0, 0, 0, 0.2);\n    z-index: 10;\n  }\n  p {\n    font-size: smaller;\n    text-align: center;\n  }\n`;\n\nconst Description = styled(motion.div)`\n  display: flex;\n  padding: 0px 10px;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  z-index: 10;\n  max-height: 5rem;\n  text-align: center;\n`;\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\nimport { GetTrendingPeople } from \"../actions/Trending/TrendingActions\";\nimport { PersonType } from \"../actions/Trending/TrendingActionTypes\";\nimport { Pagination } from \"../components/Pagination\";\nimport { Person } from \"../components/cards/Person\";\nimport { RootStore } from \"../Store\";\nimport { FilmsList, Films } from \"./Home\";\nimport { Loader } from \"../components/Loader\";\nimport styled from \"styled-components\";\n\nexport const TrendingPeople = () => {\n  const dispatch = useDispatch();\n\n  const location = useLocation();\n  const pathCurrentPage = parseInt(location.pathname.split(\"/\")[2]);\n\n  useEffect(() => {\n    dispatch(GetTrendingPeople(pathCurrentPage));\n    window.scrollTo(0, 0);\n  }, [dispatch, pathCurrentPage]);\n\n  const trendingPeople = useSelector(\n    (state: RootStore) => state.trendingPeople.trendingPersons\n  );\n  const currentPage = useSelector(\n    (state: RootStore) => state.trendingPeople.trendingPersons?.page\n  );\n  const totalPages = useSelector(\n    (state: RootStore) => state.trendingPeople.trendingPersons?.total_pages\n  );\n  const trendingPeopleLoading = useSelector(\n    (state: RootStore) => state.trendingPeople.loading\n  );\n\n  return (\n    <>\n      {trendingPeopleLoading ? (\n        <Loader />\n      ) : (\n        <>\n          {trendingPeople && (\n            <>\n              <PageHeader>Trending People: </PageHeader>\n              <FilmsList className=\"page\">\n                <Films>\n                  {trendingPeople?.results.map((person: PersonType) => (\n                    <Person\n                      key={person.id}\n                      name={person.name}\n                      profile_path={person.profile_path}\n                      id={person.id}\n                    />\n                  ))}\n                </Films>\n              </FilmsList>\n              <Pagination\n                currentPage={currentPage}\n                totalPages={totalPages}\n                filtration={\"trending_people\"}\n              />\n            </>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nconst PageHeader = styled.h2`\n  padding: 5rem 2rem 2rem 2rem;\n  text-align: left;\n  width: 100%;\n`;\n","import { FC } from \"react\";\nimport styled from \"styled-components\";\nimport { motion } from \"framer-motion\";\nimport { useHistory } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport noPoster from \"../../svg/noPoster.svg\";\n\ninterface TVProps {\n  name: string;\n  vote_average: number;\n  poster_path: string;\n  first_air_date: string;\n  id: number;\n}\n\nexport const TV: FC<TVProps> = ({\n  name,\n  vote_average,\n  poster_path,\n  first_air_date,\n  id,\n}) => {\n  const [isHovered, setIsHovered] = useState(false);\n  const history = useHistory();\n\n  return (\n    <StyledFilm\n      onMouseEnter={() => setIsHovered(true)}\n      onMouseLeave={() => setIsHovered(false)}\n      onClick={() => history.push(`/tv/${id}/1`)}\n    >\n      <img\n        src={\n          poster_path\n            ? `https://image.tmdb.org/t/p/w300${poster_path}`\n            : noPoster\n        }\n        alt=\"poster\"\n      />\n      <CardBg className=\"card-bg\" />\n      <Description className=\"description\">\n        <motion.h5>{name}</motion.h5>\n        <motion.p>{vote_average}/10</motion.p>\n      </Description>\n    </StyledFilm>\n  );\n};\n\nconst CardBg = styled(motion.div)`\n  width: calc(100% - 2px);\n  background-color: #606060;\n  position: absolute;\n  border-radius: 0.5rem;\n  height: 1%;\n  top: 10px;\n  transition: all 0.2s ease;\n`;\n\nconst StyledFilm = styled(motion.div)`\n  border-radius: 1rem;\n  z-index: 5;\n  cursor: pointer;\n  display: flex;\n  position: relative;\n  flex-direction: column;\n  background-color: transparent;\n  align-items: center;\n  transition: all 0.1s ease-in;\n  &:hover {\n    transform: scale(1.015);\n    .card-bg {\n      height: 100%;\n    }\n    h5 {\n      color: #e1e1e1;\n    }\n    p {\n      color: #d0d0d0;\n    }\n  }\n  img {\n    width: 100%;\n    object-fit: cover;\n    border-radius: 0.5rem;\n    box-shadow: 0px 5px 20px rgba(0, 0, 0, 0.2);\n    z-index: 10;\n  }\n  p {\n    font-size: smaller;\n    text-align: center;\n  }\n`;\n\nconst Description = styled(motion.div)`\n  display: flex;\n  padding: 0px 10px;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  z-index: 10;\n  max-height: 5rem;\n  text-align: center;\n`;\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\nimport { GetTrendingTV } from \"../actions/Trending/TrendingActions\";\nimport { TvType } from \"../actions/Trending/TrendingActionTypes\";\nimport { Film } from \"../components/cards/Film\";\nimport { Pagination } from \"../components/Pagination\";\nimport { TV } from \"../components/cards/TV\";\nimport { RootStore } from \"../Store\";\nimport { FilmsList, Films } from \"./Home\";\nimport { Loader } from \"../components/Loader\";\nimport styled from \"styled-components\";\n\nexport const TrendingTV = () => {\n  const dispatch = useDispatch();\n\n  const location = useLocation();\n  const pathCurrentPage = parseInt(location.pathname.split(\"/\")[2]);\n\n  useEffect(() => {\n    dispatch(GetTrendingTV(pathCurrentPage));\n    window.scrollTo(0, 0);\n  }, [dispatch, pathCurrentPage]);\n\n  const trendingTV = useSelector(\n    (state: RootStore) => state.trendingTV.trendingTV\n  );\n  const currentPage = useSelector(\n    (state: RootStore) => state.trendingTV.trendingTV?.page\n  );\n  const totalPages = useSelector(\n    (state: RootStore) => state.trendingTV.trendingTV?.total_pages\n  );\n  const trendingTVLoading = useSelector(\n    (state: RootStore) => state.trendingTV.loading\n  );\n\n  return (\n    <>\n      {trendingTVLoading ? (\n        <Loader />\n      ) : (\n        <>\n          {trendingTV && (\n            <>\n              <PageHeader>Trending TV Shows: </PageHeader>\n              <FilmsList className=\"page\">\n                <Films>\n                  {trendingTV?.results.map((tv: TvType) => (\n                    <TV\n                      key={tv.id}\n                      name={tv.name}\n                      vote_average={tv.vote_average}\n                      poster_path={tv.poster_path}\n                      first_air_date={tv.first_air_date}\n                      id={tv.id}\n                    />\n                  ))}\n                </Films>\n              </FilmsList>\n              <Pagination\n                currentPage={currentPage}\n                totalPages={totalPages}\n                filtration={\"trending_tvs\"}\n              />\n            </>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nconst PageHeader = styled.h2`\n  padding: 5rem 2rem 2rem 2rem;\n  text-align: left;\n  width: 100%;\n`;\n","export const IMAGES_LOADING = \"IMAGES_LOADING\";\nexport const IMAGES_FAIL = \"IMAGES_FAIL\";\nexport const IMAGES_SUCCESS = \"IMAGES_SUCCESS\";\n\nexport type ImageType = {\n  aspect_ratio: number;\n  heigth: number;\n  iso_639_1: string;\n  file_path: string;\n  vote_average: number;\n  vote_count: number;\n  width: number;\n};\n\nexport type ImagesType = {\n  backdrops: [ImageType];\n  id: number;\n  logos: [ImageType];\n  posters: [ImageType];\n};\n\nexport interface imagesFail {\n  type: typeof IMAGES_FAIL;\n  errorMsg: \"\";\n}\nexport interface imagesLoading {\n  type: typeof IMAGES_LOADING;\n  errorMsg: \"\";\n}\nexport interface imagesSuccess {\n  type: typeof IMAGES_SUCCESS;\n  payload: ImagesType;\n  filmId: number;\n  errorMsg: \"\";\n}\n\nexport type ImagesDispatchTypes = imagesFail | imagesLoading | imagesSuccess;\n","//  Types for basic search by film id ================================\nexport const INDIVIDUAL_FILM_LOADING = \"INDIVIDUAL_FILM_LOADING\";\nexport const INDIVIDUAL_FILM_FAIL = \"INDIVIDUAL_FILM_FAIL\";\nexport const INDIVIDUAL_FILM_SUCCESS = \"INDIVIDUAL_FILM_SUCCESS\";\n\nexport type IndividualFilmType = {\n  genres: [IndividualFilmGenres];\n  backdrop_path: string;\n  budget: number;\n  homepage: string;\n  original_language: string;\n  original_title: string;\n  overview: string;\n  poster_path: string;\n  release_date: string;\n  revenue: number;\n  tagline: string;\n  title: string;\n  vote_average: number;\n  vote_count: number;\n  production_companies: Array<Company>;\n  imdb_id: string;\n  runtime: number;\n};\n\nexport type IndividualFilmGenres = {\n  id: number;\n  name: string;\n};\n\nexport type Company = {\n  id: number;\n  logo_path: string;\n  name: string;\n  origin_country: string;\n};\n\nexport interface IndividualFilmFail {\n  type: typeof INDIVIDUAL_FILM_FAIL;\n  errorMsg: \"\";\n}\nexport interface IndividualFilmLoading {\n  type: typeof INDIVIDUAL_FILM_LOADING;\n  errorMsg: \"\";\n}\nexport interface IndividualFilmSuccess {\n  type: typeof INDIVIDUAL_FILM_SUCCESS;\n  payload: IndividualFilmType;\n  filmId: number;\n  errorMsg: \"\";\n}\n\nexport type IndividualFilmDispatchTypes =\n  | IndividualFilmFail\n  | IndividualFilmLoading\n  | IndividualFilmSuccess;\n\n//  ==========================================================\n","import React, { FC, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { GetPosters } from \"../actions/IndividualFilm/ImagesActions\";\nimport { RootStore } from \"../Store\";\nimport prev from \"../svg/prev.svg\";\nimport next from \"../svg/next.svg\";\nimport noPoster from \"../svg/noPoster.svg\";\n\ninterface PosterSliderProps {\n  pathFilmId: number;\n  altPosterPath: string;\n}\n\nexport const PosterSlider: FC<PosterSliderProps> = ({\n  pathFilmId,\n  altPosterPath,\n}) => {\n  const dispatch = useDispatch();\n  const [currentPoster, setCurrentPoster] = useState(0);\n  const posters = useSelector((state: RootStore) => state.posters.data);\n  // const postersLength = posters![pathFilmId].posters.length;\n\n  const nextPoster = () => {\n    const length = posters![pathFilmId].posters.length;\n    setCurrentPoster(currentPoster < length - 1 ? currentPoster + 1 : 0);\n  };\n\n  const prevPoster = () => {\n    const length = posters![pathFilmId].posters.length;\n    setCurrentPoster(currentPoster !== 0 ? currentPoster - 1 : length - 1);\n  };\n\n  return (\n    <SliderContainer>\n      <Poster>\n        <img\n          key={altPosterPath}\n          src={\n            altPosterPath\n              ? `https://image.tmdb.org/t/p/w500${altPosterPath}`\n              : noPoster\n          }\n          alt=\"poster\"\n        />\n      </Poster>\n    </SliderContainer>\n  );\n};\n\nconst SliderContainer = styled(motion.div)`\n  overflow: hidden;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Poster = styled(motion.div)`\n  max-width: 80vw;\n  img {\n    height: inherit;\n    border-radius: 1rem;\n    height: auto;\n    width: 70vw;\n    object-fit: cover;\n    border: 1px solid #e7e7e7;\n    @media (min-width: 768px) {\n      width: 20rem;\n    }\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/star.43942ea5.svg\";","export const CREDITS_LOADING = \"CREDITS_LOADING\";\nexport const CREDITS_FAIL = \"CREDITS_FAIL\";\nexport const CREDITS_SUCCESS = \"CREDITS_SUCCESS\";\n\nexport type CastType = {\n  adult: boolean;\n  gender: number;\n  id: number;\n  known_for_department: string;\n  name: string;\n  original_name: string;\n  popularity: number;\n  profile_path: string;\n  cast_id: number;\n  character: string;\n  credit_id: string;\n  order: number;\n};\n\nexport type CrewType = {\n  adult: boolean;\n  gender: number;\n  id: number;\n  known_for_department: string;\n  name: string;\n  original_name: string;\n  popularity: number;\n  profile_path: string;\n  credit_id: string;\n  department: string;\n  job: string;\n};\n\nexport type CreditsType = {\n  id: number;\n  cast: [CastType];\n  crew: [CrewType];\n};\n\nexport interface CreditsFail {\n  type: typeof CREDITS_FAIL;\n  errorMsg: \"\";\n}\nexport interface CreditsLoading {\n  type: typeof CREDITS_LOADING;\n  errorMsg: \"\";\n}\nexport interface CreditsSuccess {\n  type: typeof CREDITS_SUCCESS;\n  payload: CreditsType;\n  filmId: number;\n  errorMsg: \"\";\n}\n\nexport type CreditsDispatchTypes =\n  | CreditsFail\n  | CreditsLoading\n  | CreditsSuccess;\n","import React, { FC, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport {\n  CreditsType,\n  CrewType,\n} from \"../actions/IndividualFilm/CreditsActionTypes\";\nimport noPerson from \"../svg/noPerson.svg\";\nimport { v4 as uuidv4 } from \"uuid\";\n\ninterface CastSliderI {\n  credits: CreditsType;\n  toggle: string;\n}\n\nexport const CastSlider: FC<CastSliderI> = ({ credits, toggle }) => {\n  const crewIds: number[] = [];\n  const history = useHistory();\n\n  const renderCast = () => {\n    return credits.cast.map((person) => (\n      <SliderPhoto\n        key={uuidv4()}\n        onClick={() => history.push(`/person/${person.id}`)}\n      >\n        <img\n          src={\n            person.profile_path\n              ? `https://image.tmdb.org/t/p/w200${person.profile_path}`\n              : noPerson\n          }\n          height=\"50px\"\n          alt=\"\"\n        />\n        <div className=\"person-name\">{person.name}</div>\n      </SliderPhoto>\n    ));\n  };\n\n  const renderCrew = () => {\n    return credits.crew.map((person) => {\n      if (!crewIds.includes(person.id)) {\n        crewIds.push(person.id);\n        return (\n          <SliderPhoto\n            key={uuidv4()}\n            onClick={() => history.push(`/person/${person.id}`)}\n          >\n            <img\n              src={\n                person.profile_path\n                  ? `https://image.tmdb.org/t/p/w200${person.profile_path}`\n                  : noPerson\n              }\n              height=\"50px\"\n              alt=\"\"\n            />\n            <div className=\"person-name\">{person.name}</div>\n          </SliderPhoto>\n        );\n      } else {\n        return <></>;\n      }\n    });\n  };\n\n  return <Slider>{toggle === \"cast\" ? renderCast() : renderCrew()}</Slider>;\n};\n\nconst SliderPhoto = styled.div`\n  margin: 0.5rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  cursor: pointer;\n  .person-name {\n    text-align: center;\n    margin-top: 0.5rem;\n    opacity: 0.7;\n  }\n  img {\n    border-radius: 50%;\n    width: 5rem;\n    height: 5rem;\n    object-fit: cover;\n  }\n`;\n\nconst Slider = styled.div`\n  margin: 1rem 0rem;\n  padding: 0.5rem;\n  width: 100%;\n  box-shadow: 2px 2px 10px #7676767f;\n  border-radius: 0.5rem;\n  display: flex;\n  justify-content: flex-start;\n  overflow: scroll;\n`;\n","import { FetchedPopularFilmsType } from \"../PopularFilms/PopularFilmsActionTypes\";\n\n//  Types for basic search by film id ================================\nexport const RECOMMENDED_FILMS_LOADING = \"RECOMMENDED_FILMS_LOADING\";\nexport const RECOMMENDED_FILMS_FAIL = \"RECOMMENDED_FILMS_FAIL\";\nexport const RECOMMENDED_FILMS_SUCCESS = \"RECOMMENDED_FILMS_SUCCESS\";\n\nexport type RecommendedFilmsType = FetchedPopularFilmsType;\n\nexport interface RecommendedFilmsFail {\n  type: typeof RECOMMENDED_FILMS_FAIL;\n  errorMsg: \"\";\n}\nexport interface RecommendedFilmsLoading {\n  type: typeof RECOMMENDED_FILMS_LOADING;\n  errorMsg: \"\";\n}\nexport interface RecommendedFilmsSuccess {\n  type: typeof RECOMMENDED_FILMS_SUCCESS;\n  payload: RecommendedFilmsType;\n  filmId: number;\n  errorMsg: \"\";\n}\n\nexport type RecommendedFilmsDispatchTypes =\n  | RecommendedFilmsFail\n  | RecommendedFilmsLoading\n  | RecommendedFilmsSuccess;\n\n//  ==========================================================\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nexport const NoRecommendations = () => {\n  return <NoRecContainer>No recommendations found</NoRecContainer>;\n};\n\nconst NoRecContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 3rem 0rem;\n`;\n","import { motion } from \"framer-motion\";\nimport React, { useEffect, useState } from \"react\";\nimport { FC } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { v4 as uuid } from \"uuid\";\n\ninterface PaginationProps {\n  currentPage: number | undefined;\n  totalPages: number | undefined;\n  filtration: string;\n  filmId: number;\n  top: number;\n}\n\nexport const RecommendedPagination: FC<PaginationProps> = ({\n  top,\n  currentPage,\n  totalPages,\n  filtration,\n  filmId,\n}) => {\n  const windowsNumber = Math.ceil(totalPages! / 10);\n  const paginationWindows: any = [];\n  for (let window = 0; window < windowsNumber; window++) {\n    paginationWindows.push([]);\n    for (let page = 1; page < 11; page++) {\n      if (page + window * 10 > totalPages!) {\n        break;\n      }\n      paginationWindows[paginationWindows.length - 1].push(page + window * 10);\n    }\n  }\n\n  const scroll = () => {\n    window.scrollTo({\n      top: 0,\n      left: 0,\n      behavior: \"smooth\",\n    });\n  };\n\n  const [currentWindow, setCurrentWindow] = useState(\n    currentPage! % 10 !== 0\n      ? Math.floor(currentPage! / 10)\n      : Math.floor(currentPage! / 10) - 1\n  );\n\n  const handlePreviousClick = () => {\n    if (currentWindow > 0) {\n      setCurrentWindow(currentWindow - 1);\n    }\n  };\n  const handleNextClick = () => {\n    if (currentWindow < windowsNumber - 1) {\n      setCurrentWindow(currentWindow + 1);\n    }\n  };\n\n  return (\n    <PaginationContainer className=\"pagination\">\n      <PaginationClicker onClick={handlePreviousClick}>&lt;</PaginationClicker>\n      {paginationWindows[currentWindow].map((page: number) => (\n        <Link\n          key={uuid()}\n          to={`/${filtration}/${filmId}/${page}`}\n          onClick={() => scroll()}\n        >\n          {currentPage === page ? (\n            <SelectedLinkContainer> {page} </SelectedLinkContainer>\n          ) : (\n            <LinkContainer> {page} </LinkContainer>\n          )}\n        </Link>\n      ))}\n      <PaginationClicker onClick={handleNextClick}>&gt;</PaginationClicker>\n    </PaginationContainer>\n  );\n};\n\nconst PaginationContainer = styled(motion.nav)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 3rem 0rem;\n`;\n\nconst PaginationClicker = styled(motion.div)`\n  cursor: pointer;\n  margin: 0rem 0.5rem;\n  cursor: pointer;\n`;\n\nconst LinkContainer = styled(motion.div)`\n  margin: 1rem 0.5rem;\n  width: 2rem;\n  text-align: center;\n  position: relative;\n`;\n\nconst SelectedLinkContainer = styled(motion.div)`\n  margin: 1rem 0.5rem;\n  width: 2rem;\n  text-align: center;\n  position: relative;\n  color: #333;\n  font-weight: bold;\n  font-size: larger;\n`;\n","import { FC, useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { Film } from \"../components/cards/Film\";\nimport { RootStore } from \"../Store\";\nimport { motion } from \"framer-motion\";\nimport { FilmType } from \"../actions/PopularFilms/PopularFilmsActionTypes\";\nimport { useLocation } from \"react-router-dom\";\nimport { GetRecommendedFilms } from \"../actions/IndividualFilm/RecommendedFilmsActions\";\nimport { NoRecommendations } from \"./NoRecommendations\";\nimport { RecommendedPagination } from \"./RecommendedPagination\";\nimport { Loader } from \"./Loader\";\n\nexport const RecommendedFilms = () => {\n  const dispatch = useDispatch();\n\n  // get current page number to pass into Pagination container and to dispatch\n  const location = useLocation();\n  const pathFilmIndex = parseInt(location.pathname.split(\"/\")[2]);\n  const pathPageIndex = parseInt(location.pathname.split(\"/\")[3]);\n\n  const recommendedRef = useRef<HTMLDivElement>(null);\n  const recRect = recommendedRef.current;\n  let top: any = recRect?.getBoundingClientRect().y;\n\n  useEffect(() => {\n    dispatch(GetRecommendedFilms(pathFilmIndex, pathPageIndex));\n  }, [dispatch, pathFilmIndex, pathPageIndex]);\n\n  const recommendedFilms = useSelector(\n    (state: RootStore) => state.recommendedFilms.data\n  );\n\n  const loadingRecs = useSelector(\n    (state: RootStore) => state.recommendedFilms.loading\n  );\n\n  return (\n    <>\n      {loadingRecs ? (\n        <Loader />\n      ) : (\n        <>\n          {recommendedFilms && recommendedFilms[pathFilmIndex] && (\n            <>\n              <FilmsList className=\"page\">\n                <h2 id=\"recommended\" ref={recommendedRef}>\n                  Recommended:\n                </h2>\n                {recommendedFilms![pathFilmIndex].total_pages > 0 ? (\n                  <Films>\n                    {recommendedFilms[pathFilmIndex].results.map(\n                      (film: FilmType, index) => {\n                        if (index === 20) {\n                          return \"\";\n                        } else {\n                          return (\n                            <Film\n                              key={film.id}\n                              id={film.id}\n                              title={film.title}\n                              vote_average={\n                                Math.round(film.vote_average * 10) / 10\n                              }\n                              poster_path={film.poster_path}\n                              release_date={film.release_date}\n                            />\n                          );\n                        }\n                      }\n                    )}\n                  </Films>\n                ) : (\n                  <NoRecommendations />\n                )}\n              </FilmsList>\n              {recommendedFilms![pathFilmIndex].total_pages > 0 ? (\n                <RecommendedPagination\n                  top={top}\n                  currentPage={recommendedFilms[pathFilmIndex].page}\n                  totalPages={recommendedFilms[pathFilmIndex].total_pages}\n                  filtration={\"film\"}\n                  filmId={pathFilmIndex}\n                />\n              ) : (\n                \"\"\n              )}\n            </>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport const FilmsList = styled(motion.div)`\n  padding: 1rem 2rem;\n  h2 {\n    margin-bottom: 2rem;\n    font-size: 2.5rem;\n  }\n`;\n\nexport const Films = styled(motion.div)`\n  min-height: 80vh;\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));\n  grid-column-gap: 2rem;\n  grid-row-gap: 4rem;\n`;\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport {\n  RECOMMENDED_FILMS_FAIL,\n  RECOMMENDED_FILMS_LOADING,\n  RECOMMENDED_FILMS_SUCCESS,\n  RecommendedFilmsDispatchTypes,\n} from \"./RecommendedFilmsActionTypes\";\n\nconst api_key = \"6650890bc34e6b3eeefaf36590d2a82c\";\n\nexport const GetRecommendedFilms =\n  (filmId: number, page: number) =>\n  async (dispatch: Dispatch<RecommendedFilmsDispatchTypes>) => {\n    try {\n      dispatch({\n        type: RECOMMENDED_FILMS_LOADING,\n        errorMsg: \"\",\n      });\n\n      let result = await axios.get(\n        `https://api.themoviedb.org/3/movie/${filmId}/recommendations?api_key=${api_key}&language=en-US&page=${page}`\n      );\n      dispatch({\n        type: RECOMMENDED_FILMS_SUCCESS,\n        payload: result.data,\n        filmId: filmId,\n        errorMsg: \"\",\n      });\n    } catch (error) {\n      dispatch({\n        type: RECOMMENDED_FILMS_FAIL,\n        errorMsg: error,\n      });\n    }\n  };\n","import { motion } from \"framer-motion\";\nimport { useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { GetPosters } from \"../actions/IndividualFilm/ImagesActions\";\nimport { GetIndividualFilm } from \"../actions/IndividualFilm/IndividualFilmActions\";\nimport { RootStore } from \"../Store\";\nimport _ from \"lodash\";\nimport { PosterSlider } from \"../components/PosterSlider\";\nimport noPoster from \"../svg/noPoster.svg\";\nimport star from \"../svg/star.svg\";\nimport { GetCredits } from \"../actions/IndividualFilm/CreditsActions\";\nimport { CastSlider } from \"../components/CastSlider\";\nimport { RecommendedFilms } from \"../components/RecommendedFilms\";\nimport { Loader } from \"../components/Loader\";\nimport { v4 as uuid } from \"uuid\";\n\nexport const FilmPage = () => {\n  const location = useLocation();\n  const pathFilmId = parseInt(location.pathname.split(\"/\")[2]);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(GetIndividualFilm(pathFilmId));\n    dispatch(GetPosters(pathFilmId));\n    dispatch(GetCredits(pathFilmId));\n    window.scrollTo(0, 0);\n  }, [dispatch, pathFilmId]);\n\n  const getHours = (mins: number) => {\n    let hours = Math.floor(mins / 60);\n    let minutes = mins - 60 * hours;\n    return `${hours}h ${minutes}min`;\n  };\n\n  const data = useSelector((state: RootStore) => state.individualFilms.data!);\n  const posters = useSelector((state: RootStore) => state.posters.data);\n  const credits = useSelector((state: RootStore) => state.credits.data);\n  const loadingFilms = useSelector(\n    (state: RootStore) => state.individualFilms.loading\n  );\n\n  return (\n    <>\n      {loadingFilms ? (\n        <Loader />\n      ) : (\n        <>\n          {data &&\n            data![pathFilmId] &&\n            posters &&\n            posters![pathFilmId] &&\n            credits &&\n            credits![pathFilmId] && (\n              <MainSection>\n                <FilmIntroCentered>\n                  <FilmName>{data[pathFilmId].title}</FilmName>\n                  <SubnameInfo>\n                    {/* {data[pathFilmId].release_date.split(\"-\")[0]} */}\n                    {data[pathFilmId].release_date}\n                  </SubnameInfo>\n                  <Tagline>{data![pathFilmId].tagline}</Tagline>\n                </FilmIntroCentered>\n                <FilmDiv>\n                  <LeftInfo>\n                    <FilmIntro>\n                      <FilmName>{data[pathFilmId].title}</FilmName>\n                      <SubnameInfo>\n                        {data[pathFilmId].release_date.split(\"-\")[0]}\n                      </SubnameInfo>\n                      <Tagline>{data![pathFilmId].tagline}</Tagline>\n                    </FilmIntro>\n\n                    <Media>\n                      {!_.isEmpty(data![pathFilmId].poster_path) ? (\n                        <PosterSlider\n                          pathFilmId={pathFilmId}\n                          altPosterPath={data![pathFilmId].poster_path}\n                        />\n                      ) : (\n                        <img src={noPoster} alt=\"poster\" />\n                      )}\n\n                      {/* <VideoWrapper>\n                <iframe width=\"560\" height=\"349\" src={`https://www.youtube.com/embed/PLl99DlL6b4?modestbranding=1&showinfo=0&rel=0&`} frameBorder='0' allowFullScreen></iframe>\n              </VideoWrapper> */}\n                    </Media>\n                    <RatingDuration>\n                      <RatingContainer>\n                        <div className=\"rating\">\n                          <img src={star} alt=\"star\" />\n                          <div>\n                            <b>{data![pathFilmId].vote_average}</b>/10\n                          </div>\n                        </div>\n                        <div className=\"votes\">\n                          ({data![pathFilmId].vote_count} total votes)\n                        </div>\n                      </RatingContainer>\n                      <SubnameInfo>\n                        {getHours(data[pathFilmId].runtime)}\n                      </SubnameInfo>\n                    </RatingDuration>\n                    <GenresContainer>\n                      {data![pathFilmId].genres.map((genre) => (\n                        <Genre key={uuid()}>{genre.name}</Genre>\n                      ))}\n                    </GenresContainer>\n                  </LeftInfo>\n\n                  <RightInfo>\n                    <div>\n                      <HeaderDiv>Overview:</HeaderDiv>\n                      <FilmDescription>\n                        {data![pathFilmId].overview}\n                      </FilmDescription>\n                    </div>\n                    <HeaderDiv>Cast:</HeaderDiv>\n                    <CastSlider credits={credits[pathFilmId]} toggle={\"cast\"} />\n                    {\n                      !_.isEmpty(\n                        credits[pathFilmId].crew ? (\n                          <>\n                            <HeaderDiv>Crew:</HeaderDiv>\n                            <CastSlider\n                              credits={credits[pathFilmId]}\n                              toggle={\"crew\"}\n                            />\n                          </>\n                        ) : (\n                          <></>\n                        )\n                      )\n                    }\n                  </RightInfo>\n                </FilmDiv>\n              </MainSection>\n            )}\n        </>\n      )}\n      <RecommendedFilms />\n    </>\n  );\n};\n\n// const VideoWrapper = styled(motion.div)`\n//   position: relative;\n//   padding-bottom: 56.25%; /* 16:9 */\n//   height: 0;\n//   --aspect-ratio: 3 / 4;\n//   padding-bottom: calc(var(--aspect-ratio, .5625) * 100%);\n//   iframe{\n//     position: absolute;\n//     top: 0;\n//     left: 0;\n//     width: 100%;\n//     height: 100%;\n//   }\n// `\n\nconst LeftInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n\n  @media (min-width: 768px) {\n    width: 40%;\n    margin: 0rem 4rem;\n    margin-right: 1rem;\n  }\n`;\nconst RightInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  padding: 1rem;\n  @media (min-width: 768px) {\n    width: 60%;\n    margin: 0.5rem 3rem 0 0;\n  }\n`;\n\nconst HeaderDiv = styled.div`\n  font-size: 1.5rem;\n  padding: 1.5rem 0rem 0rem 1rem;\n  width: 100%;\n  @media (min-width: 768px) {\n    padding: 0.5rem 0rem 0rem 1rem;\n  }\n`;\n\nconst FilmDescription = styled.div`\n  display: flex;\n  text-align: justify;\n  line-height: 1.5rem;\n  margin-top: 1rem;\n  opacity: 0.8;\n  border-left: 2px solid #333;\n  padding: 0rem 1rem;\n`;\n\nconst RatingDuration = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  justify-content: space-between;\n  padding: 0rem 1rem;\n  @media (min-width: 768px) {\n    max-width: 20rem;\n  }\n`;\n\nconst RatingContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  .rating {\n    display: flex;\n    flex-direction: row;\n    margin-right: 0.5rem;\n  }\n  .votes {\n    display: flex;\n    opacity: 0.5;\n    margin-top: 0.2rem;\n  }\n  img {\n    height: 1rem;\n    padding-right: 0.5rem;\n  }\n`;\n\nconst Tagline = styled.div`\n  font-size: 1rem;\n  font-weight: 400;\n`;\n\nconst GenresContainer = styled.div`\n  display: flex;\n  width: 100%;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  margin: 0.5rem 0rem 1rem 0rem;\n  @media (min-width: 768px) {\n    max-width: 20rem;\n  }\n`;\n\nconst Genre = styled.div`\n  color: #e0dede;\n  background-color: #333;\n  padding: 0.5rem;\n  font-size: 1rem;\n  border: 1px solid transparent;\n  margin: 0.25rem 0.5rem;\n  border-radius: 1rem;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 2px 2px 5px #7676767f;\n  &:hover {\n    background-color: #e0dede;\n    border: 1px solid #333;\n    color: #333;\n    transform: translateY(-5%);\n    cursor: pointer;\n  }\n`;\n\nconst FilmName = styled(motion.div)`\n  font-size: 2rem;\n  font-weight: 500;\n`;\n\nconst Media = styled(motion.div)`\n  margin: 1rem 0rem;\n  font-size: 2rem;\n  font-weight: 500;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  img {\n    border-radius: 1rem;\n  }\n`;\n\nconst SubnameInfo = styled(motion.div)`\n  font-size: 1rem;\n  font-weight: 500;\n  opacity: 0.7;\n  margin: 0.5rem 0rem;\n`;\n\nconst FilmIntro = styled.div`\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  margin-bottom: 1rem;\n  @media (min-width: 768px) {\n    display: none;\n  }\n`;\nconst FilmIntroCentered = styled.div`\n  display: none;\n  margin-bottom: 1rem;\n  @media (min-width: 768px) {\n    display: flex;\n    flex-direction: column;\n    text-align: center;\n  }\n`;\n\nexport const MainSection = styled(motion.div)`\n  padding: 4rem 1rem;\n`;\n\nexport const FilmDiv = styled(motion.div)`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  @media (min-width: 768px) {\n    flex-direction: row;\n    align-items: flex-start;\n    justify-content: space-around;\n  }\n`;\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport {\n  INDIVIDUAL_FILM_LOADING,\n  INDIVIDUAL_FILM_FAIL,\n  INDIVIDUAL_FILM_SUCCESS,\n  IndividualFilmDispatchTypes,\n} from \"./IndividualFilmActionTypes\";\n\nconst api_key = \"6650890bc34e6b3eeefaf36590d2a82c\";\n\nexport const GetIndividualFilm =\n  (filmId: number) =>\n  async (dispatch: Dispatch<IndividualFilmDispatchTypes>) => {\n    try {\n      dispatch({\n        type: INDIVIDUAL_FILM_LOADING,\n        errorMsg: \"\",\n      });\n\n      let result = await axios.get(\n        `https://api.themoviedb.org/3/movie/${filmId}?api_key=${api_key}&language=en-US`\n      );\n      dispatch({\n        type: INDIVIDUAL_FILM_SUCCESS,\n        payload: result.data,\n        filmId: filmId,\n        errorMsg: \"\",\n      });\n    } catch (error) {\n      dispatch({\n        type: INDIVIDUAL_FILM_FAIL,\n        errorMsg: error,\n      });\n    }\n  };\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport {\n  IMAGES_FAIL,\n  IMAGES_LOADING,\n  IMAGES_SUCCESS,\n  ImagesDispatchTypes,\n} from \"./ImagesActionTypes\";\n\nconst api_key = \"6650890bc34e6b3eeefaf36590d2a82c\";\n\nexport const GetPosters =\n  (filmId: number) => async (dispatch: Dispatch<ImagesDispatchTypes>) => {\n    try {\n      dispatch({\n        type: IMAGES_LOADING,\n        errorMsg: \"\",\n      });\n\n      let result = await axios.get(\n        `https://api.themoviedb.org/3/movie/${filmId}/images?api_key=${api_key}&language=en-US&include_image_language=en`\n      );\n      dispatch({\n        type: IMAGES_SUCCESS,\n        payload: result.data,\n        filmId: filmId,\n        errorMsg: \"\",\n      });\n    } catch (error) {\n      dispatch({\n        type: IMAGES_FAIL,\n        errorMsg: error,\n      });\n    }\n  };\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport {\n  CREDITS_FAIL,\n  CREDITS_LOADING,\n  CREDITS_SUCCESS,\n  CreditsDispatchTypes,\n} from \"./CreditsActionTypes\";\n\nconst api_key = \"6650890bc34e6b3eeefaf36590d2a82c\";\n\nexport const GetCredits =\n  (filmId: number) => async (dispatch: Dispatch<CreditsDispatchTypes>) => {\n    try {\n      dispatch({\n        type: CREDITS_LOADING,\n        errorMsg: \"\",\n      });\n\n      let result = await axios.get(\n        `https://api.themoviedb.org/3/movie/${filmId}/credits?api_key=${api_key}&language=en-US`\n      );\n      dispatch({\n        type: CREDITS_SUCCESS,\n        payload: result.data,\n        filmId: filmId,\n        errorMsg: \"\",\n      });\n    } catch (error) {\n      dispatch({\n        type: CREDITS_FAIL,\n        errorMsg: error,\n      });\n    }\n  };\n","export const INDIVIDUAL_PERSON_LOADING = \"INDIVIDUAL_PERSON_LOADING\";\nexport const INDIVIDUAL_PERSON_FAIL = \"INDIVIDUAL_PERSON_FAIL\";\nexport const INDIVIDUAL_PERSON_SUCCESS = \"INDIVIDUAL_PERSON_SUCCESS\";\n\nexport type IndividualPersonType = {\n  adult: boolean;\n  also_known_as: [string];\n  biography: string;\n  birthday: string;\n  deathday: string;\n  gender: number;\n  homepage: string;\n  id: number;\n  imdb_id: string;\n  known_for_department: string;\n  name: string;\n  place_of_birth: string;\n  popularity: number;\n  profile_path: string;\n};\n\nexport interface IndividualPersonFail {\n  type: typeof INDIVIDUAL_PERSON_FAIL;\n  errorMsg: \"\";\n}\nexport interface IndividualPersonLoading {\n  type: typeof INDIVIDUAL_PERSON_LOADING;\n  errorMsg: \"\";\n}\nexport interface IndividualPersonSuccess {\n  type: typeof INDIVIDUAL_PERSON_SUCCESS;\n  payload: IndividualPersonType;\n  personId: number;\n  errorMsg: \"\";\n}\n\nexport type IndividualPersonDispatchTypes =\n  | IndividualPersonFail\n  | IndividualPersonLoading\n  | IndividualPersonSuccess;\n","export const INDIVIDUAL_PERSON_IMAGES_LOADING =\n  \"INDIVIDUAL_PERSON_IMAGES_LOADING\";\nexport const INDIVIDUAL_PERSON_IMAGES_FAIL = \"INDIVIDUAL_PERSON_IMAGES_FAIL\";\nexport const INDIVIDUAL_PERSON_IMAGES_SUCCESS =\n  \"INDIVIDUAL_PERSON_IMAGES_SUCCESS\";\n\nexport type IndividualPersonImagesType = {\n  id: number;\n  profiles: [PersonProfileType];\n};\n\nexport type PersonProfileType = {\n  aspect_ratio: number;\n  height: number;\n  file_path: string;\n  vote_average: number;\n  width: number;\n};\n\nexport interface IndividualPersonImagesFail {\n  type: typeof INDIVIDUAL_PERSON_IMAGES_FAIL;\n  errorMsg: \"\";\n}\nexport interface IndividualPersonImagesLoading {\n  type: typeof INDIVIDUAL_PERSON_IMAGES_LOADING;\n  errorMsg: \"\";\n}\nexport interface IndividualPersonImagesSuccess {\n  type: typeof INDIVIDUAL_PERSON_IMAGES_SUCCESS;\n  payload: IndividualPersonImagesType;\n  personId: number;\n  errorMsg: \"\";\n}\n\nexport type IndividualPersonImagesDispatchTypes =\n  | IndividualPersonImagesFail\n  | IndividualPersonImagesLoading\n  | IndividualPersonImagesSuccess;\n","// EXID - external id\nexport const INDIVIDUAL_PERSON_EXID_LOADING = \"INDIVIDUAL_PERSON_EXID_LOADING\";\nexport const INDIVIDUAL_PERSON_EXID_FAIL = \"INDIVIDUAL_PERSON_EXID_FAIL\";\nexport const INDIVIDUAL_PERSON_EXID_SUCCESS = \"INDIVIDUAL_PERSON_EXID_SUCCESS\";\n\nexport type IndividualPersonExIdType = {\n  id: number;\n  imdb_id: string;\n  facebook_id: string;\n  instagram_id: string;\n  twitter_id: string;\n};\n\nexport interface IndividualPersonExIdFail {\n  type: typeof INDIVIDUAL_PERSON_EXID_FAIL;\n  errorMsg: \"\";\n}\nexport interface IndividualPersonExIdLoading {\n  type: typeof INDIVIDUAL_PERSON_EXID_LOADING;\n  errorMsg: \"\";\n}\nexport interface IndividualPersonExIdSuccess {\n  type: typeof INDIVIDUAL_PERSON_EXID_SUCCESS;\n  payload: IndividualPersonExIdType;\n  personId: number;\n  errorMsg: \"\";\n}\n\nexport type IndividualPersonExIdDispatchTypes =\n  | IndividualPersonExIdFail\n  | IndividualPersonExIdLoading\n  | IndividualPersonExIdSuccess;\n","import { FilmType } from \"../PopularFilms/PopularFilmsActionTypes\";\n\nexport const INDIVIDUAL_PERSON_MOVIE_CREDITS_LOADING =\n  \"INDIVIDUAL_PERSON_MOVIE_CREDITS_LOADING\";\nexport const INDIVIDUAL_PERSON_MOVIE_CREDITS_FAIL =\n  \"INDIVIDUAL_PERSON_MOVIE_CREDITS_FAIL\";\nexport const INDIVIDUAL_PERSON_MOVIE_CREDITS_SUCCESS =\n  \"INDIVIDUAL_PERSON_MOVIE_CREDITS_SUCCESS\";\n\nexport type IndividualPersonMovieCreditsType = {\n  id: number;\n  cast: [FilmPersonCast];\n  crew: [FilmPersonCrew];\n};\n\nexport type FilmPersonCast = {\n  adult: boolean;\n  backdrop_path: string;\n  genre_ids: [number];\n  id: number;\n  original_language: string;\n  original_title: string;\n  overview: string;\n  poster_path: string;\n  release_date: string;\n  title: string;\n  video: boolean; // !!!\n  vote_average: number;\n  vote_count: number;\n  popularity: number;\n  character: string;\n  credit_id: string;\n  order: number;\n};\nexport type FilmPersonCrew = {\n  adult: boolean;\n  backdrop_path: string;\n  genre_ids: [number];\n  id: number;\n  original_language: string;\n  original_title: string;\n  overview: string;\n  poster_path: string;\n  release_date: string;\n  title: string;\n  video: boolean; // !!!\n  vote_average: number;\n  vote_count: number;\n  popularity: number;\n  credit_id: string;\n  department: string;\n  job: string;\n};\n\nexport interface IndividualPersonMovieCreditsFail {\n  type: typeof INDIVIDUAL_PERSON_MOVIE_CREDITS_FAIL;\n  errorMsg: \"\";\n}\nexport interface IndividualPersonMovieCreditsLoading {\n  type: typeof INDIVIDUAL_PERSON_MOVIE_CREDITS_LOADING;\n  errorMsg: \"\";\n}\nexport interface IndividualPersonMovieCreditsSuccess {\n  type: typeof INDIVIDUAL_PERSON_MOVIE_CREDITS_SUCCESS;\n  payload: IndividualPersonMovieCreditsType;\n  personId: number;\n  errorMsg: \"\";\n}\n\nexport type IndividualPersonMovieCreditsDispatchTypes =\n  | IndividualPersonMovieCreditsFail\n  | IndividualPersonMovieCreditsLoading\n  | IndividualPersonMovieCreditsSuccess;\n","import { TvType } from \"../Trending/TrendingActionTypes\";\n\nexport const INDIVIDUAL_PERSON_TV_CREDITS_LOADING =\n  \"INDIVIDUAL_PERSON_TV_CREDITS_LOADING\";\nexport const INDIVIDUAL_PERSON_TV_CREDITS_FAIL =\n  \"INDIVIDUAL_PERSON_TV_CREDITS_FAIL\";\nexport const INDIVIDUAL_PERSON_TV_CREDITS_SUCCESS =\n  \"INDIVIDUAL_PERSON_TV_CREDITS_SUCCESS\";\n\nexport type IndividualPersonTvCreditsType = {\n  id: number;\n  cast: [TVPersonCast];\n  crew: [TVPersonCrew];\n};\n\nexport type TVPersonCast = {\n  first_air_date: string;\n  name: string;\n  backdrop_path: string;\n  genre_ids: [number];\n  original_language: string;\n  id: number;\n  poster_path: string;\n  vote_average: number;\n  vote_count: number;\n  overview: string;\n  origin_country: [string];\n  original_name: string;\n  popularity: number;\n  character: string;\n  credit_id: string;\n  episode_count: string;\n};\nexport type TVPersonCrew = {\n  first_air_date: string;\n  name: string;\n  backdrop_path: string;\n  genre_ids: [number];\n  original_language: string;\n  id: number;\n  poster_path: string;\n  vote_average: number;\n  vote_count: number;\n  overview: string;\n  origin_country: [string];\n  original_name: string;\n  popularity: number;\n  credit_id: string;\n  episode_count: string;\n  department: string;\n  job: string;\n};\n\nexport interface IndividualPersonTvCreditsFail {\n  type: typeof INDIVIDUAL_PERSON_TV_CREDITS_FAIL;\n  errorMsg: \"\";\n}\nexport interface IndividualPersonTvCreditsLoading {\n  type: typeof INDIVIDUAL_PERSON_TV_CREDITS_LOADING;\n  errorMsg: \"\";\n}\nexport interface IndividualPersonTvCreditsSuccess {\n  type: typeof INDIVIDUAL_PERSON_TV_CREDITS_SUCCESS;\n  payload: IndividualPersonTvCreditsType;\n  personId: number;\n  errorMsg: \"\";\n}\n\nexport type IndividualPersonTvCreditsDispatchTypes =\n  | IndividualPersonTvCreditsFail\n  | IndividualPersonTvCreditsLoading\n  | IndividualPersonTvCreditsSuccess;\n","import { FC } from \"react\";\nimport styled from \"styled-components\";\nimport { motion } from \"framer-motion\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport noPoster from \"../../svg/noPoster.svg\";\n\ninterface PersonFilmProps {\n  title: string;\n  vote_average: number;\n  poster_path: string;\n  release_date: string;\n  id: number;\n  role: string;\n}\n\nexport const PersonFilm: FC<PersonFilmProps> = ({\n  title,\n  vote_average,\n  poster_path,\n  release_date,\n  id,\n  role,\n}) => {\n  const [isHovered, setIsHovered] = useState(false);\n\n  const history = useHistory();\n\n  const shortenTitle = (title: string) => {\n    let splittedTitle = title.split(\" \");\n    let newTitle = [];\n    for (let i = 0; i < 9; i++) {\n      if (i === 8) {\n        newTitle.push(`${splittedTitle[i]}...`);\n        break;\n      }\n      newTitle.push(`${splittedTitle[i]} `);\n    }\n    return newTitle.join(\"\");\n  };\n\n  return (\n    <StyledFilm\n      onMouseEnter={() => setIsHovered(true)}\n      onMouseLeave={() => setIsHovered(false)}\n      onClick={() => history.push(`/film/${id}/1`)}\n    >\n      <img\n        src={\n          poster_path\n            ? `https://image.tmdb.org/t/p/w300${poster_path}`\n            : noPoster\n        }\n        alt=\"poster\"\n      />\n      <CardBg className=\"card-bg\" />\n      <Description className=\"description\">\n        <motion.h5>\n          {title.split(\"\").length < 60 ? title : shortenTitle(title)}\n        </motion.h5>\n        <motion.p>{vote_average}/10</motion.p>\n        <p>{`(as ${role})`}</p>\n      </Description>\n    </StyledFilm>\n  );\n};\n\nconst CardBg = styled(motion.div)`\n  width: calc(100% - 2px);\n  background-color: #606060;\n  position: absolute;\n  border-radius: 0.5rem;\n  height: 1%;\n  top: 10px;\n  transition: all 0.2s ease;\n`;\n\nconst StyledFilm = styled(motion.div)`\n  border-radius: 1rem;\n  z-index: 5;\n  cursor: pointer;\n  display: flex;\n  position: relative;\n  flex-direction: column;\n  background-color: transparent;\n  align-items: center;\n  /* justify-content: space-between; */\n  transition: all 0.1s ease;\n  &:hover {\n    transform: scale(1.015);\n    .card-bg {\n      height: 100%;\n    }\n    h5 {\n      color: #e1e1e1;\n    }\n    p {\n      color: #d0d0d0;\n    }\n  }\n  img {\n    width: 100%;\n    height: auto;\n    object-fit: cover;\n    border-radius: 0.5rem;\n    box-shadow: 0px 5px 20px rgba(0, 0, 0, 0.2);\n    z-index: 10;\n  }\n  p {\n    font-size: smaller;\n    text-align: center;\n  }\n`;\n\nconst Description = styled(motion.div)`\n  display: flex;\n  padding: 0px 10px;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  z-index: 10;\n  max-height: 5rem;\n  text-align: center;\n  /* h5 {\n    color: #e1e1e1;\n  }\n  p {\n    color: #d0d0d0;\n  } */\n`;\n","import React from \"react\";\nimport styled, { keyframes } from \"styled-components\";\n\nexport const LoaderSmall = () => {\n  return (\n    <LoaderContainer>\n      <OuterDiv>\n        <InnerDiv></InnerDiv>\n      </OuterDiv>\n    </LoaderContainer>\n  );\n};\n\nconst PulseAnimation = keyframes`\n  0% { transform: scale(1) }\n  50% { transform: scale(1.75) }\n  100% { transform: scale(1) }\n`;\n\nconst LoaderContainer = styled.div`\n  height: 100%;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nconst OuterDiv = styled.div`\n  width: 3rem;\n  height: 3rem;\n  border-radius: 50%;\n  background-color: #a1a1a1;\n  position: relative;\n  animation-name: ${PulseAnimation};\n  animation-duration: 1s;\n  animation-iteration-count: infinite;\n`;\nconst InnerDiv = styled.div`\n  width: 2rem;\n  height: 2rem;\n  position: absolute;\n  top: 0.5rem;\n  left: 0.5rem;\n  border-radius: 50%;\n  background-color: #6f6f6f;\n  animation-name: ${PulseAnimation};\n  animation-duration: 1.5s;\n  animation-iteration-count: infinite;\n  animation-delay: 1.5s;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nexport const NoFilmography = () => {\n  return <NoFilmographyContainer>No Information</NoFilmographyContainer>;\n};\n\nconst NoFilmographyContainer = styled.div`\n  width: 100%;\n  height: 20vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 1.5rem;\n  opacity: 0.7;\n`;\n","import _, { uniqueId } from \"lodash\";\nimport React, { FC } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { IndividualPersonMovieCreditsType } from \"../actions/IndividualPerson/PersonMovieCreditsActionTypes\";\nimport { Film } from \"./cards/Film\";\nimport { PersonFilm } from \"./cards/PersonFilm\";\nimport { LoaderSmall } from \"./LoaderSmall\";\nimport { NoFilmography } from \"./NoFilmography\";\nimport { v4 as uuidv4 } from \"uuid\";\n\ninterface PersonFilmsI {\n  moviesDataLoading: boolean;\n  roleType: string;\n  moviesData:\n    | {\n        [id: number]: IndividualPersonMovieCreditsType;\n      }\n    | undefined;\n}\n\nexport const PersonFilms: FC<PersonFilmsI> = ({\n  moviesDataLoading,\n  moviesData,\n  roleType,\n}) => {\n  const location = useLocation();\n  const pathPersonId: number = Number(\n    location.pathname.split(\"/\")[location.pathname.split(\"/\").length - 1]\n  );\n\n  return (\n    <div>\n      <>\n        {moviesDataLoading ? (\n          <LoaderSmall />\n        ) : (\n          <>\n            {roleType === \"crew\" ? (\n              <>\n                {_.isEmpty(moviesData![pathPersonId].crew) ? (\n                  <NoFilmography />\n                ) : (\n                  <CardsContainer>\n                    {moviesData![pathPersonId].crew.map((film) => (\n                      <div key={uuidv4()} style={{ maxWidth: \"20rem\" }}>\n                        <PersonFilm\n                          title={film.title}\n                          vote_average={film.vote_average}\n                          poster_path={film.poster_path}\n                          id={film.id}\n                          release_date={film.release_date}\n                          // key={film.id}\n                          role={film.job}\n                        />\n                      </div>\n                    ))}\n                  </CardsContainer>\n                )}\n              </>\n            ) : (\n              <>\n                {_.isEmpty(moviesData![pathPersonId].cast) ? (\n                  <NoFilmography />\n                ) : (\n                  <CardsContainer>\n                    {moviesData![pathPersonId].cast.map((film) => (\n                      <div key={uuidv4()} style={{ maxWidth: \"20rem\" }}>\n                        <Film\n                          title={film.title}\n                          vote_average={film.vote_average}\n                          poster_path={film.poster_path}\n                          id={film.id}\n                          release_date={film.release_date}\n                          // key={film.id}\n                        />\n                      </div>\n                    ))}\n                  </CardsContainer>\n                )}\n              </>\n            )}\n          </>\n        )}\n      </>\n    </div>\n  );\n};\n\nconst CardsContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  grid-column-gap: 2rem;\n  grid-row-gap: 4rem;\n  width: 100%;\n`;\n","import { FC } from \"react\";\nimport styled from \"styled-components\";\nimport { motion } from \"framer-motion\";\nimport { useHistory } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport noPoster from \"../../svg/noPoster.svg\";\n\ninterface PersonTVProps {\n  name: string;\n  vote_average: number;\n  poster_path: string;\n  first_air_date: string;\n  id: number;\n  role: string;\n}\n\nexport const PersonTV: FC<PersonTVProps> = ({\n  name,\n  vote_average,\n  poster_path,\n  first_air_date,\n  id,\n  role,\n}) => {\n  const [isHovered, setIsHovered] = useState(false);\n  const history = useHistory();\n\n  return (\n    <StyledFilm\n      // transition={{ duration: 0.05 }}\n      // whileHover={{ scale: 1.025 }}\n      onMouseEnter={() => setIsHovered(true)}\n      onMouseLeave={() => setIsHovered(false)}\n      onClick={() => history.push(`/tv/${id}/1`)}\n    >\n      <img\n        src={\n          poster_path\n            ? `https://image.tmdb.org/t/p/w300${poster_path}`\n            : noPoster\n        }\n        alt=\"poster\"\n      />\n      <CardBg className=\"card-bg\" />\n      <Description className=\"description\">\n        <motion.h5>{name}</motion.h5>\n        <motion.p>{vote_average}/10</motion.p>\n        <p>{`(as ${role})`}</p>\n      </Description>\n    </StyledFilm>\n  );\n};\n\nconst CardBg = styled(motion.div)`\n  width: calc(100% - 2px);\n  background-color: #606060;\n  position: absolute;\n  border-radius: 0.5rem;\n  height: 1%;\n  top: 10px;\n  transition: all 0.2s ease;\n`;\n\nconst StyledFilm = styled(motion.div)`\n  border-radius: 1rem;\n  z-index: 5;\n  cursor: pointer;\n  display: flex;\n  position: relative;\n  flex-direction: column;\n  background-color: transparent;\n  align-items: center;\n  transition: all 0.1s ease-in;\n  &:hover {\n    transform: scale(1.015);\n    .card-bg {\n      height: 100%;\n    }\n    h5 {\n      color: #e1e1e1;\n    }\n    p {\n      color: #d0d0d0;\n    }\n  }\n  img {\n    width: 100%;\n    object-fit: cover;\n    border-radius: 0.5rem;\n    box-shadow: 0px 5px 20px rgba(0, 0, 0, 0.2);\n    z-index: 10;\n  }\n  p {\n    font-size: smaller;\n    text-align: center;\n  }\n`;\n\nconst Description = styled(motion.div)`\n  display: flex;\n  padding: 0px 10px;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  z-index: 10;\n  max-height: 5rem;\n  text-align: center;\n`;\n","import _ from \"lodash\";\nimport React, { FC } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { IndividualPersonTvCreditsType } from \"../actions/IndividualPerson/PersonTVCreditsActionTypes\";\nimport { PersonTV } from \"./cards/PersonTV\";\nimport { TV } from \"./cards/TV\";\nimport { LoaderSmall } from \"./LoaderSmall\";\nimport { NoFilmography } from \"./NoFilmography\";\n\ninterface PersonTVsI {\n  tvsDataLoading: boolean;\n  roleType: string;\n  tvData:\n    | {\n        [id: number]: IndividualPersonTvCreditsType;\n      }\n    | undefined;\n}\n\nexport const PersonTVs: FC<PersonTVsI> = ({\n  tvsDataLoading,\n  tvData,\n  roleType,\n}) => {\n  const location = useLocation();\n  const pathPersonId: number = Number(\n    location.pathname.split(\"/\")[location.pathname.split(\"/\").length - 1]\n  );\n\n  return (\n    <div>\n      <>\n        {tvsDataLoading ? (\n          <LoaderSmall />\n        ) : (\n          <>\n            {roleType === \"crew\" ? (\n              <>\n                {_.isEmpty(tvData![pathPersonId].crew) ? (\n                  <NoFilmography />\n                ) : (\n                  <CardsContainer>\n                    {tvData![pathPersonId].crew.map((tv) => (\n                      <div style={{ maxWidth: \"20rem\" }}>\n                        <PersonTV\n                          name={tv.name}\n                          vote_average={tv.vote_average}\n                          poster_path={tv.poster_path}\n                          id={tv.id}\n                          first_air_date={tv.first_air_date}\n                          key={tv.id}\n                          role={tv.job}\n                        />\n                      </div>\n                    ))}\n                  </CardsContainer>\n                )}\n              </>\n            ) : (\n              <>\n                {_.isEmpty(tvData![pathPersonId].cast) ? (\n                  <NoFilmography />\n                ) : (\n                  <CardsContainer>\n                    {tvData![pathPersonId].cast.map((tv) => (\n                      <div style={{ maxWidth: \"20rem\" }}>\n                        <TV\n                          name={tv.name}\n                          vote_average={tv.vote_average}\n                          poster_path={tv.poster_path}\n                          id={tv.id}\n                          first_air_date={tv.first_air_date}\n                          key={tv.id}\n                        />\n                      </div>\n                    ))}\n                  </CardsContainer>\n                )}\n              </>\n            )}\n          </>\n        )}\n      </>\n    </div>\n  );\n};\n\nconst CardsContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  grid-column-gap: 2rem;\n  grid-row-gap: 4rem;\n  width: 100%;\n`;\n","import React, { FC } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { RootStore } from \"../Store\";\nimport { PersonFilms } from \"./PersonFilms\";\nimport { PersonTVs } from \"./PersonTVs\";\n\ninterface FilmographyToShowI {\n  mediaType: string;\n  roleType: string;\n}\n\nexport const FilmographyToShow: FC<FilmographyToShowI> = ({\n  mediaType,\n  roleType,\n}) => {\n  const moviesDataLoading = useSelector(\n    (state: RootStore) => state.individualPerson.personMovies.loading\n  );\n  const moviesData = useSelector(\n    (state: RootStore) => state.individualPerson.personMovies.data\n  );\n\n  const tvDataLoading = useSelector(\n    (state: RootStore) => state.individualPerson.personTVs.loading\n  );\n  const tvData = useSelector(\n    (state: RootStore) => state.individualPerson.personTVs.data\n  );\n\n  return (\n    <FilmographyToShowContainer>\n      {/* {roleType} {mediaType} */}\n      {mediaType === \"films\" ? (\n        <PersonFilms\n          moviesDataLoading={moviesDataLoading}\n          moviesData={moviesData}\n          roleType={roleType}\n        />\n      ) : (\n        <PersonTVs\n          tvsDataLoading={tvDataLoading}\n          tvData={tvData}\n          roleType={roleType}\n        />\n        // <PersonTVs tvDataLoading={tvDataLoading} tvData={tvData} />\n      )}\n    </FilmographyToShowContainer>\n  );\n};\n\nconst FilmographyToShowContainer = styled.div`\n  width: 100%;\n  padding: 2rem;\n`;\n","import { motion } from \"framer-motion\";\nimport React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { RootStore } from \"../Store\";\nimport { FilmographyToShow } from \"./FilmographyToShow\";\n\nexport const PersonFilmography = () => {\n  const filmsData = useSelector(\n    (state: RootStore) => state.individualPerson.personMovies.data\n  );\n  const TVData = useSelector(\n    (state: RootStore) => state.individualPerson.personTVs.data\n  );\n\n  const [selectedRole, setSelectedRole] = useState(\"cast\");\n  const [selectedArea, setSelectedArea] = useState(\"films\");\n\n  return (\n    <PersonFilmographyContainer>\n      <SelectionContainer>\n        <FilmTVSelection>\n          <FilmSelect\n            id=\"films\"\n            onClick={() => setSelectedArea(\"films\")}\n            transition={{ type: \"tween\", duration: 0.2 }}\n            initial={{\n              width: \"60%\",\n            }}\n            style={{\n              backgroundColor: `${\n                selectedArea === \"films\" ? \"#b4b2b2\" : \"white\"\n              }`,\n              fontWeight: `${selectedArea === \"films\" ? \"normal\" : \"lighter\"}`,\n            }}\n            animate={{\n              width: `${selectedArea === \"films\" ? \"60%\" : \"40%\"}`,\n              borderTopRightRadius: `${\n                selectedArea === \"films\" ? \"0.75rem\" : \"0%\"\n              }`,\n            }}\n          >\n            Films\n          </FilmSelect>\n          <TVSelect\n            id=\"tvs\"\n            onClick={() => setSelectedArea(\"tvs\")}\n            transition={{ type: \"tween\", duration: 0.2 }}\n            initial={{\n              width: \"40%\",\n            }}\n            style={{\n              backgroundColor: `${\n                selectedArea === \"tvs\" ? \"#b4b2b2\" : \"white\"\n              }`,\n              fontWeight: `${selectedArea === \"tvs\" ? \"normal\" : \"lighter\"}`,\n            }}\n            animate={{\n              width: `${selectedArea === \"tvs\" ? \"60%\" : \"40%\"}`,\n              borderTopLeftRadius: `${\n                selectedArea === \"tvs\" ? \"0.75rem\" : \"0%\"\n              }`,\n            }}\n          >\n            TV Series\n          </TVSelect>\n        </FilmTVSelection>\n        <RoleSelection>\n          <ActorSelect\n            id=\"cast\"\n            onClick={() => setSelectedRole(\"cast\")}\n            transition={{ type: \"tween\", duration: 0.2 }}\n            initial={{\n              width: \"60%\",\n            }}\n            style={{\n              backgroundColor: `${\n                selectedRole === \"cast\" ? \"#c4c4c4\" : \"white\"\n              }`,\n              fontWeight: `${selectedRole === \"cast\" ? \"normal\" : \"lighter\"}`,\n            }}\n            animate={{\n              width: `${selectedRole === \"cast\" ? \"60%\" : \"40%\"}`,\n              borderBottomRightRadius: `${\n                selectedRole === \"cast\" ? \"0.75rem\" : \"0%\"\n              }`,\n            }}\n          >\n            Actor\n          </ActorSelect>\n          <CrewSelect\n            id=\"crew\"\n            onClick={() => setSelectedRole(\"crew\")}\n            transition={{ type: \"tween\", duration: 0.2 }}\n            initial={{\n              width: \"40%\",\n            }}\n            style={{\n              backgroundColor: `${\n                selectedRole === \"crew\" ? \"#c4c4c4\" : \"white\"\n              }`,\n              fontWeight: `${selectedRole === \"crew\" ? \"normal\" : \"lighter\"}`,\n            }}\n            animate={{\n              width: `${selectedRole === \"crew\" ? \"60%\" : \"40%\"}`,\n              borderBottomLeftRadius: `${\n                selectedRole === \"crew\" ? \"0.75rem\" : \"0%\"\n              }`,\n            }}\n          >\n            Crew\n          </CrewSelect>\n        </RoleSelection>\n      </SelectionContainer>\n      <FilmographyToShow roleType={selectedRole} mediaType={selectedArea} />\n    </PersonFilmographyContainer>\n  );\n};\n\nconst TVSelect = styled(motion.div)`\n  padding: 0.5rem;\n  display: flex;\n  justify-content: center;\n`;\nconst FilmSelect = styled(motion.div)`\n  padding: 0.5rem;\n  display: flex;\n  justify-content: center;\n`;\nconst CrewSelect = styled(motion.div)`\n  padding: 0.5rem;\n  display: flex;\n  justify-content: center;\n`;\nconst ActorSelect = styled(motion.div)`\n  padding: 0.5rem;\n  display: flex;\n  justify-content: center;\n`;\n\nconst RoleSelection = styled(motion.div)`\n  display: flex;\n  width: 100%;\n`;\nconst FilmTVSelection = styled(motion.div)`\n  display: flex;\n  width: 100%;\n`;\n\nconst SelectionContainer = styled(motion.div)`\n  box-shadow: 2px 2px 10px #7676767f;\n  border-radius: 1rem;\n  overflow: hidden;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst PersonFilmographyContainer = styled.div`\n  margin: 2rem 2rem;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  box-shadow: 2px 2px 10px #7676767f;\n  border-radius: 1rem;\n`;\n","export default __webpack_public_path__ + \"static/media/IMDb.022247d1.svg\";","export default __webpack_public_path__ + \"static/media/icons8-twitter.a453aad8.svg\";","export default __webpack_public_path__ + \"static/media/icons8-instagram-logo.5377a69a.svg\";","export default __webpack_public_path__ + \"static/media/icons8-facebook.0aacd4a0.svg\";","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\nimport { GetIndividualPerson } from \"../actions/IndividualPerson/IndividualPersonActions\";\nimport { GetPersonImages } from \"../actions/IndividualPerson/PersonImagesActions\";\nimport styled from \"styled-components\";\nimport { GetPersonExternalIds } from \"../actions/IndividualPerson/PersonExternalIdsActions\";\nimport { GetPersonMovies } from \"../actions/IndividualPerson/PersonMovieCreditsActions\";\nimport { GetPersonTVs } from \"../actions/IndividualPerson/PersonTVCreditsActions\";\nimport { RootStore } from \"../Store\";\nimport { PosterSlider } from \"../components/PosterSlider\";\nimport { Loader } from \"../components/Loader\";\nimport { PersonFilmography } from \"../components/PersonFilmography\";\nimport IMDbIcon from \"../svg/IMDb.svg\";\nimport twitterIcon from \"../svg/icons8-twitter.svg\";\nimport instagramIcon from \"../svg/icons8-instagram-logo.svg\";\nimport facebookIcon from \"../svg/icons8-facebook.svg\";\nimport _ from \"lodash\";\nimport { LoaderSmall } from \"../components/LoaderSmall\";\n\nexport const PersonPage = () => {\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const pathPersonId = parseInt(location.pathname.split(\"/\")[2]);\n\n  useEffect(() => {\n    dispatch(GetIndividualPerson(pathPersonId));\n    dispatch(GetPersonImages(pathPersonId));\n    dispatch(GetPersonExternalIds(pathPersonId));\n    dispatch(GetPersonMovies(pathPersonId));\n    dispatch(GetPersonTVs(pathPersonId));\n    window.scrollTo(0, 0);\n  }, [dispatch, pathPersonId]);\n\n  const personData = useSelector(\n    (state: RootStore) => state.individualPerson.personData.data\n  );\n  const personLoading = useSelector(\n    (state: RootStore) => state.individualPerson.personData.loading\n  );\n\n  const externalLinks = useSelector(\n    (state: RootStore) => state.individualPerson.personExternalIds\n  );\n\n  return (\n    <PersonContainer>\n      {personLoading ? (\n        <Loader />\n      ) : (\n        <>\n          {personData && personData[pathPersonId] && (\n            <>\n              <PersonHeader>\n                <PersonName>{personData[pathPersonId].name}</PersonName>\n                {personData[pathPersonId].birthday ? (\n                  <BirthDate>{personData[pathPersonId].birthday}</BirthDate>\n                ) : (\n                  <></>\n                )}\n              </PersonHeader>\n              <PersonBody>\n                <PersonLeft>\n                  <PosterSlider\n                    pathFilmId={0}\n                    altPosterPath={personData[pathPersonId].profile_path}\n                  />\n                </PersonLeft>\n                <PersonRight>\n                  <HeaderDiv>Biography:</HeaderDiv>\n\n                  {personData[pathPersonId].biography ? (\n                    <Biography>{personData[pathPersonId].biography}</Biography>\n                  ) : (\n                    <Biography>Biography not found</Biography>\n                  )}\n                  <SubPhotoBio>\n                    {personData[pathPersonId].place_of_birth ? (\n                      <SubBioSection>\n                        <SubBioHeader>Place of birth:</SubBioHeader>\n                        <BirthPlace>\n                          {personData[pathPersonId].place_of_birth}\n                        </BirthPlace>\n                      </SubBioSection>\n                    ) : (\n                      <></>\n                    )}\n                    {personData[pathPersonId].known_for_department ? (\n                      <SubBioSection>\n                        <SubBioHeader>Known for:</SubBioHeader>\n                        <KnownFor>\n                          {personData[pathPersonId].known_for_department}\n                        </KnownFor>\n                      </SubBioSection>\n                    ) : (\n                      <></>\n                    )}\n                  </SubPhotoBio>\n                  <HeaderDiv style={{ marginTop: \"2rem\" }}>Links:</HeaderDiv>\n                  {externalLinks.data &&\n                  !_.isEmpty(externalLinks.data![pathPersonId]) ? (\n                    <>\n                      {externalLinks.loading ? (\n                        <LoaderSmall />\n                      ) : (\n                        <ExternalIDs>\n                          {externalLinks.data![pathPersonId].instagram_id ? (\n                            <ExternalLink\n                              href={`https://instagram.com/${\n                                externalLinks.data![pathPersonId].instagram_id\n                              }`}\n                              target=\"_blank\"\n                            >\n                              <img src={instagramIcon} height=\"25px\" alt=\"\" />\n                            </ExternalLink>\n                          ) : (\n                            \"\"\n                          )}\n\n                          {externalLinks.data![pathPersonId].facebook_id ? (\n                            <ExternalLink\n                              href={`https://facebook.com/${\n                                externalLinks.data![pathPersonId].facebook_id\n                              }`}\n                              target=\"_blank\"\n                            >\n                              <img src={facebookIcon} height=\"25px\" alt=\"\" />\n                            </ExternalLink>\n                          ) : (\n                            \"\"\n                          )}\n                          {externalLinks.data![pathPersonId].twitter_id ? (\n                            <ExternalLink\n                              href={`https://twitter.com/${\n                                externalLinks.data![pathPersonId].twitter_id\n                              }`}\n                              target=\"_blank\"\n                            >\n                              <img src={twitterIcon} height=\"25px\" alt=\"\" />\n                            </ExternalLink>\n                          ) : (\n                            \"\"\n                          )}\n                          {externalLinks.data![pathPersonId].imdb_id ? (\n                            <ExternalLink\n                              href={`https://imdb.com/name/${\n                                externalLinks.data![pathPersonId].imdb_id\n                              }`}\n                              target=\"_blank\"\n                            >\n                              <img src={IMDbIcon} height=\"25px\" alt=\"\" />\n                            </ExternalLink>\n                          ) : (\n                            \"\"\n                          )}\n                        </ExternalIDs>\n                      )}\n                    </>\n                  ) : (\n                    \"\"\n                  )}\n                </PersonRight>\n              </PersonBody>\n              <PersonFilmography />\n            </>\n          )}\n        </>\n      )}\n    </PersonContainer>\n  );\n};\n\nconst ExternalLink = styled.a`\n  display: flex;\n  margin-right: 1rem;\n  width: 3rem;\n  height: 3rem;\n  cursor: pointer;\n  justify-content: center;\n  align-items: center;\n  transition: all 0.2s ease;\n  border-radius: 1rem;\n  &:hover {\n    transform: translateY(-5%);\n    background-color: #c4c4c4;\n  }\n  @media (max-width: 768px) {\n    width: 5rem;\n    height: 5rem;\n  }\n`;\n\nconst ExternalIDs = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: flex-start;\n  width: 100%;\n  margin-top: 1rem;\n  padding: 0rem 1rem;\n  border-left: 2px solid #333;\n`;\n\nconst SubPhotoBio = styled.div`\n  display: flex;\n  width: 100%;\n  flex-direction: column;\n  opacity: 0.8;\n  margin-top: 1rem;\n  border-left: 2px solid #333;\n`;\nconst BirthDate = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: row;\n  width: 100%;\n  padding: 0rem 1rem;\n  margin: 0.5rem;\n  font-size: 1rem;\n  font-weight: 500;\n  margin: 0.5rem 0rem;\n  opacity: 0.7;\n  @media (min-width: 768px) {\n    max-width: 20rem;\n  }\n`;\n\nconst SubBioHeader = styled.div`\n  opacity: 1;\n  width: 15rem;\n`;\n\nconst SubBioSection = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  height: 3rem;\n  padding: 0rem 1rem;\n`;\nconst BirthPlace = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  justify-content: flex-start;\n  align-items: flex-start;\n  @media (min-width: 768px) {\n    max-width: 20rem;\n  }\n`;\nconst KnownFor = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  justify-content: flex-start;\n  align-items: flex-start;\n  @media (min-width: 768px) {\n    max-width: 20rem;\n  }\n`;\n\nconst Biography = styled.div`\n  display: flex;\n  text-align: justify;\n  line-height: 1.5rem;\n  margin-top: 1rem;\n  width: 100%;\n  opacity: 0.8;\n  border-left: 2px solid #333;\n  padding: 0rem 1rem;\n  max-height: 12rem;\n  overflow: scroll;\n`;\n\nconst HeaderDiv = styled.div`\n  font-size: 1.5rem;\n  padding: 1.5rem 0rem 0rem 1rem;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: flex-start;\n  @media (min-width: 768px) {\n    padding: 0.5rem 0rem 0rem 1rem;\n  }\n`;\n\nconst PersonContainer = styled.div`\n  padding: 3rem 0rem;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nconst PersonHeader = styled.div`\n  margin: 1rem 0rem;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst PersonName = styled.div`\n  font-size: 2rem;\n  font-weight: 500;\n`;\n\nconst PersonLeft = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  padding: 1rem;\n  @media (min-width: 768px) {\n    width: 40%;\n    margin: 0rem 4rem;\n    margin-right: 1rem;\n  }\n`;\nconst PersonRight = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  width: 100%;\n  padding: 1rem;\n  @media (min-width: 768px) {\n    width: 60%;\n    margin: 0.5rem 3rem 0 0;\n  }\n`;\n\nconst PersonBody = styled.div`\n  display: flex;\n  flex-direction: column;\n  @media (min-width: 768px) {\n    flex-direction: row;\n  }\n`;\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport {\n  INDIVIDUAL_PERSON_FAIL,\n  INDIVIDUAL_PERSON_LOADING,\n  INDIVIDUAL_PERSON_SUCCESS,\n  IndividualPersonDispatchTypes,\n} from \"./IndividualPersonActionTypes\";\n\nconst api_key = \"6650890bc34e6b3eeefaf36590d2a82c\";\n\nexport const GetIndividualPerson =\n  (personId: number) =>\n  async (dispatch: Dispatch<IndividualPersonDispatchTypes>) => {\n    try {\n      dispatch({\n        type: INDIVIDUAL_PERSON_LOADING,\n        errorMsg: \"\",\n      });\n\n      let result = await axios.get(\n        `https://api.themoviedb.org/3/person/${personId}?api_key=${api_key}&language=en-US`\n      );\n      dispatch({\n        type: INDIVIDUAL_PERSON_SUCCESS,\n        payload: result.data,\n        personId: personId,\n        errorMsg: \"\",\n      });\n    } catch (error) {\n      dispatch({\n        type: INDIVIDUAL_PERSON_FAIL,\n        errorMsg: error,\n      });\n    }\n  };\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport {\n  INDIVIDUAL_PERSON_IMAGES_FAIL,\n  INDIVIDUAL_PERSON_IMAGES_LOADING,\n  INDIVIDUAL_PERSON_IMAGES_SUCCESS,\n  IndividualPersonImagesDispatchTypes,\n} from \"./PersonImagesActionTypes\";\n\nconst api_key = \"6650890bc34e6b3eeefaf36590d2a82c\";\n\nexport const GetPersonImages =\n  (personId: number) =>\n  async (dispatch: Dispatch<IndividualPersonImagesDispatchTypes>) => {\n    try {\n      dispatch({\n        type: INDIVIDUAL_PERSON_IMAGES_LOADING,\n        errorMsg: \"\",\n      });\n\n      let result = await axios.get(\n        `https://api.themoviedb.org/3/person/${personId}/images?api_key=${api_key}`\n      );\n      dispatch({\n        type: INDIVIDUAL_PERSON_IMAGES_SUCCESS,\n        payload: result.data,\n        personId: personId,\n        errorMsg: \"\",\n      });\n    } catch (error) {\n      dispatch({\n        type: INDIVIDUAL_PERSON_IMAGES_FAIL,\n        errorMsg: error,\n      });\n    }\n  };\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport {\n  INDIVIDUAL_PERSON_EXID_FAIL,\n  INDIVIDUAL_PERSON_EXID_LOADING,\n  INDIVIDUAL_PERSON_EXID_SUCCESS,\n  IndividualPersonExIdDispatchTypes,\n} from \"./PersonExternalIdsActionTypes\";\n\nconst api_key = \"6650890bc34e6b3eeefaf36590d2a82c\";\n\nexport const GetPersonExternalIds =\n  (personId: number) =>\n  async (dispatch: Dispatch<IndividualPersonExIdDispatchTypes>) => {\n    try {\n      dispatch({\n        type: INDIVIDUAL_PERSON_EXID_LOADING,\n        errorMsg: \"\",\n      });\n\n      let result = await axios.get(\n        `https://api.themoviedb.org/3/person/${personId}/external_ids?api_key=${api_key}&language=en-US`\n      );\n      dispatch({\n        type: INDIVIDUAL_PERSON_EXID_SUCCESS,\n        payload: result.data,\n        personId: personId,\n        errorMsg: \"\",\n      });\n    } catch (error) {\n      dispatch({\n        type: INDIVIDUAL_PERSON_EXID_FAIL,\n        errorMsg: error,\n      });\n    }\n  };\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport {\n  INDIVIDUAL_PERSON_MOVIE_CREDITS_FAIL,\n  INDIVIDUAL_PERSON_MOVIE_CREDITS_LOADING,\n  INDIVIDUAL_PERSON_MOVIE_CREDITS_SUCCESS,\n  IndividualPersonMovieCreditsDispatchTypes,\n} from \"./PersonMovieCreditsActionTypes\";\n\nconst api_key = \"6650890bc34e6b3eeefaf36590d2a82c\";\n\nexport const GetPersonMovies =\n  (personId: number) =>\n  async (dispatch: Dispatch<IndividualPersonMovieCreditsDispatchTypes>) => {\n    try {\n      dispatch({\n        type: INDIVIDUAL_PERSON_MOVIE_CREDITS_LOADING,\n        errorMsg: \"\",\n      });\n\n      let result = await axios.get(\n        `https://api.themoviedb.org/3/person/${personId}/movie_credits?api_key=${api_key}&language=en-US`\n      );\n      dispatch({\n        type: INDIVIDUAL_PERSON_MOVIE_CREDITS_SUCCESS,\n        payload: result.data,\n        personId: personId,\n        errorMsg: \"\",\n      });\n    } catch (error) {\n      dispatch({\n        type: INDIVIDUAL_PERSON_MOVIE_CREDITS_FAIL,\n        errorMsg: error,\n      });\n    }\n  };\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport {\n  INDIVIDUAL_PERSON_TV_CREDITS_FAIL,\n  INDIVIDUAL_PERSON_TV_CREDITS_LOADING,\n  INDIVIDUAL_PERSON_TV_CREDITS_SUCCESS,\n  IndividualPersonTvCreditsDispatchTypes,\n} from \"./PersonTVCreditsActionTypes\";\n\nconst api_key = \"6650890bc34e6b3eeefaf36590d2a82c\";\n\nexport const GetPersonTVs =\n  (personId: number) =>\n  async (dispatch: Dispatch<IndividualPersonTvCreditsDispatchTypes>) => {\n    try {\n      dispatch({\n        type: INDIVIDUAL_PERSON_TV_CREDITS_LOADING,\n        errorMsg: \"\",\n      });\n\n      let result = await axios.get(\n        `https://api.themoviedb.org/3/person/${personId}/tv_credits?api_key=${api_key}&language=en-US`\n      );\n      dispatch({\n        type: INDIVIDUAL_PERSON_TV_CREDITS_SUCCESS,\n        payload: result.data,\n        personId: personId,\n        errorMsg: \"\",\n      });\n    } catch (error) {\n      dispatch({\n        type: INDIVIDUAL_PERSON_TV_CREDITS_FAIL,\n        errorMsg: error,\n      });\n    }\n  };\n","import { CastType, CrewType } from \"../IndividualFilm/CreditsActionTypes\";\nimport { ImageType } from \"../IndividualFilm/ImagesActionTypes\";\nimport { TvType } from \"../Trending/TrendingActionTypes\";\n\nexport const INDIVIDUAL_TV_LOADING = \"INDIVIDUAL_TV_LOADING\";\nexport const INDIVIDUAL_TV_FAIL = \"INDIVIDUAL_TV_FAIL\";\nexport const INDIVIDUAL_TV_SUCCESS = \"INDIVIDUAL_TV_SUCCESS\";\n\nexport type IndividualTVType = {\n  backdrop_path: string;\n  created_by: {\n    id: number;\n    credit_id: string;\n    name: string;\n    gender: 2;\n    profile_path: string;\n  };\n  episode_run_time: [number];\n  first_air_date: string;\n  homepage: string;\n  genres: [genre];\n  id: number;\n  languages: [string];\n  last_air_date: string;\n  last_episode_to_air: episode_to_air;\n  name: string;\n  next_episode_to_air: episode_to_air;\n  networks: [company];\n  number_of_episodes: number;\n  number_of_seasons: number;\n  original_name: string;\n  overview: string;\n  popularity: number;\n  poster_path: string;\n  production_companies: [company];\n  seasons: [season];\n  status: string;\n  tagline: string;\n  type: string;\n  vote_average: number;\n  vote_count: number;\n  credits: {\n    cast: [CastType];\n    crew: [CrewType];\n    id: number;\n  };\n  images: {\n    backdrops: [ImageType];\n    logos: [ImageType];\n    poster: [ImageType];\n  };\n  videos: {\n    results: [Video];\n  };\n  recommendations: {\n    page: number;\n    total_pages: number;\n    total_results: number;\n    results: [TvType];\n  };\n};\n\nexport type genre = {\n  id: number;\n  name: string;\n};\n\nexport type Video = {\n  name: string;\n  key: string;\n  site: string;\n  size: number;\n  type: string;\n  official: boolean;\n  published_at: string;\n  id: string;\n};\n\nexport type season = {\n  air_date: string;\n  episode_count: number;\n  id: number;\n  name: string;\n  overview: string;\n  poster_path: string;\n  season_number: number;\n};\n\nexport type company = {\n  id: number;\n  logo_path: string;\n  name: string;\n  origin_country: string;\n};\n\nexport type episode_to_air = {\n  air_date: string;\n  episode_number: string;\n  id: number;\n  name: string;\n  overview: string;\n  production_code: string;\n  season_number: string;\n  still_path: string;\n  vote_average: number;\n  vote_count: number;\n};\n\nexport interface IndividualTVFail {\n  type: typeof INDIVIDUAL_TV_FAIL;\n  errorMsg: \"\";\n}\nexport interface IndividualTVLoading {\n  type: typeof INDIVIDUAL_TV_LOADING;\n  errorMsg: \"\";\n}\nexport interface IndividualTVSuccess {\n  type: typeof INDIVIDUAL_TV_SUCCESS;\n  payload: IndividualTVType;\n  tvId: number;\n  errorMsg: \"\";\n}\n\nexport type IndividualTVDispatchTypes =\n  | IndividualTVFail\n  | IndividualTVLoading\n  | IndividualTVSuccess;\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport {\n  INDIVIDUAL_TV_FAIL,\n  INDIVIDUAL_TV_LOADING,\n  INDIVIDUAL_TV_SUCCESS,\n  IndividualTVDispatchTypes,\n} from \"./IndividualTVActionTypes\";\n\nconst api_key = \"6650890bc34e6b3eeefaf36590d2a82c\";\n\nexport const GetIndividualTV =\n  (tvId: number, recPage: number = 1) =>\n  async (dispatch: Dispatch<IndividualTVDispatchTypes>) => {\n    try {\n      dispatch({\n        type: INDIVIDUAL_TV_LOADING,\n        errorMsg: \"\",\n      });\n\n      let result = await axios.get(\n        `https://api.themoviedb.org/3/tv/${tvId}?api_key=${api_key}&language=en-US&include_image_language=en&append_to_response=credits%2Cimages%2Cvideos%2Crecommendations&page=${recPage}`\n      );\n      dispatch({\n        type: INDIVIDUAL_TV_SUCCESS,\n        payload: result.data,\n        tvId: tvId,\n        errorMsg: \"\",\n      });\n    } catch (error) {\n      dispatch({\n        type: INDIVIDUAL_TV_FAIL,\n        errorMsg: error,\n      });\n    }\n  };\n","import { FC, useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { Film } from \"../components/cards/Film\";\nimport { RootStore } from \"../Store\";\nimport { motion } from \"framer-motion\";\nimport { FilmType } from \"../actions/PopularFilms/PopularFilmsActionTypes\";\nimport { useLocation } from \"react-router-dom\";\nimport { GetRecommendedFilms } from \"../actions/IndividualFilm/RecommendedFilmsActions\";\nimport { NoRecommendations } from \"./NoRecommendations\";\nimport { RecommendedPagination } from \"./RecommendedPagination\";\nimport { TvType } from \"../actions/Trending/TrendingActionTypes\";\nimport { TV } from \"./cards/TV\";\n\nexport const RecommendedTVs = () => {\n  // get current page number to pass into Pagination container and to dispatch\n  const location = useLocation();\n  const pathTVIndex = parseInt(location.pathname.split(\"/\")[2]);\n  const pathPageIndex = parseInt(location.pathname.split(\"/\")[3]);\n\n  const recommendedRef = useRef<HTMLDivElement>(null);\n  const recRect = recommendedRef.current;\n  let top: any = recRect?.getBoundingClientRect().y;\n\n  const recommendedFilms = useSelector(\n    (state: RootStore) => state.individualTV.data![pathTVIndex].recommendations\n  );\n\n  return (\n    <>\n      {recommendedFilms && (\n        <>\n          <FilmsList className=\"page\">\n            <h2 id=\"recommended\" ref={recommendedRef}>\n              Recommended:\n            </h2>\n            {recommendedFilms.total_pages > 0 ? (\n              <Films>\n                {recommendedFilms.results.map((film: TvType, index) => {\n                  if (index === 20) {\n                    return \"\";\n                  } else {\n                    return (\n                      <TV\n                        key={film.id}\n                        id={film.id}\n                        name={film.name}\n                        vote_average={Math.round(film.vote_average * 10) / 10}\n                        poster_path={film.poster_path}\n                        first_air_date={film.first_air_date}\n                      />\n                    );\n                  }\n                })}\n              </Films>\n            ) : (\n              <NoRecommendations />\n            )}\n          </FilmsList>\n          {recommendedFilms.total_pages > 0 ? (\n            <RecommendedPagination\n              top={top}\n              currentPage={recommendedFilms.page}\n              totalPages={recommendedFilms.total_pages}\n              filtration={\"tv\"}\n              filmId={pathTVIndex}\n            />\n          ) : (\n            \"\"\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport const FilmsList = styled(motion.div)`\n  padding: 1rem 2rem;\n  h2 {\n    margin-bottom: 2rem;\n    font-size: 2.5rem;\n  }\n`;\n\nexport const Films = styled(motion.div)`\n  min-height: 80vh;\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));\n  grid-column-gap: 2rem;\n  grid-row-gap: 4rem;\n`;\n","import _ from \"lodash\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { GetIndividualTV } from \"../actions/IndividualTV/IndividualTVActions\";\nimport { CastSlider } from \"../components/CastSlider\";\nimport { Loader } from \"../components/Loader\";\nimport { NoRecommendations } from \"../components/NoRecommendations\";\nimport { PosterSlider } from \"../components/PosterSlider\";\nimport { RecommendedTVs } from \"../components/RecommendedTVs\";\nimport { RootStore } from \"../Store\";\nimport star from \"../svg/star.svg\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport const TVPage = () => {\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const pathTVId = parseInt(location.pathname.split(\"/\")[2]);\n  const pathPageId = parseInt(location.pathname.split(\"/\")[3]);\n\n  const loading = useSelector((state: RootStore) => state.individualTV.loading);\n  const data = useSelector((state: RootStore) => state.individualTV.data);\n\n  useEffect(() => {\n    dispatch(GetIndividualTV(pathTVId, pathPageId));\n    window.scrollTo(0, 0);\n  }, [dispatch, pathTVId, pathPageId]);\n\n  return (\n    <>\n      {loading ? (\n        <Loader />\n      ) : (\n        <TVContainer>\n          {data && data![pathTVId] && (\n            <>\n              <TVHeader>\n                <TVName>{data[pathTVId].name}</TVName>\n                <SubnameInfo>\n                  {data[pathTVId].first_air_date.split(\"-\")[0]}\n                  {data[pathTVId].next_episode_to_air\n                    ? ` - ${\n                        data[pathTVId].next_episode_to_air.air_date.split(\n                          \"-\"\n                        )[0]\n                      }`\n                    : \"\"}\n                </SubnameInfo>\n                <Tagline>{data[pathTVId].tagline}</Tagline>\n              </TVHeader>\n              <TVBody>\n                <TVLeft>\n                  <PosterSlider\n                    pathFilmId={pathTVId}\n                    altPosterPath={data[pathTVId].poster_path}\n                  />\n                  <RatingDuration>\n                    <RatingContainer>\n                      <div className=\"rating\">\n                        <img src={star} alt=\"star\" />\n                        <div>\n                          <b>{data![pathTVId].vote_average}</b>/10\n                        </div>\n                      </div>\n                      <div className=\"votes\">\n                        ({data![pathTVId].vote_count} total votes)\n                      </div>\n                    </RatingContainer>\n                    <Duration>\n                      <Seasons>\n                        {data![pathTVId].number_of_seasons === 1\n                          ? `${data![pathTVId].number_of_seasons} season`\n                          : `${data![pathTVId].number_of_seasons} seasons`}\n                      </Seasons>\n                      <Episodes>\n                        ({data![pathTVId].number_of_episodes} episodes)\n                      </Episodes>\n                    </Duration>\n                  </RatingDuration>\n                  <GenresContainer>\n                    {data![pathTVId].genres.map((genre) => (\n                      <Genre key={uuidv4()}>{genre.name}</Genre>\n                    ))}\n                  </GenresContainer>\n                </TVLeft>\n\n                <TVRight>\n                  <OverviewContainer>\n                    <HeaderDiv>Overview:</HeaderDiv>\n                    {data![pathTVId].overview ? (\n                      <TVDescription>{data![pathTVId].overview}</TVDescription>\n                    ) : (\n                      <TVDescription>\n                        There is no information yet...\n                      </TVDescription>\n                    )}\n                  </OverviewContainer>\n                  <HeaderDiv>Cast:</HeaderDiv>\n                  {!_.isEmpty(data[pathTVId].credits.cast) ? (\n                    <CastSlider\n                      credits={data[pathTVId].credits}\n                      toggle={\"cast\"}\n                    />\n                  ) : (\n                    <TVDescription>\n                      Unfortunately, we didn't find anything\n                    </TVDescription>\n                  )}\n\n                  {/* {!_.isEmpty(data[pathTVId].credits.crew) && (\n                <>\n                  <HeaderDiv>Crew:</HeaderDiv>\n                  <CastSlider\n                    credits={data[pathTVId].credits}\n                    toggle={\"crew\"}\n                  />\n                </>\n              )} */}\n                </TVRight>\n              </TVBody>\n            </>\n          )}\n        </TVContainer>\n      )}\n      {loading ? (\n        <Loader />\n      ) : (\n        <>\n          {data && data![pathTVId] && data![pathTVId].recommendations ? (\n            <RecommendedTVs />\n          ) : (\n            <NoRecommendations />\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nconst OverviewContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: flex-start;\n  width: 100%;\n`;\n\nconst TVContainer = styled.div`\n  padding: 3rem 0rem;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst TVName = styled.div`\n  font-size: 2rem;\n  font-weight: 500;\n`;\nconst SubnameInfo = styled.div`\n  font-size: 1rem;\n  font-weight: 500;\n  margin: 0.5rem 0rem;\n  opacity: 0.7;\n`;\nconst Tagline = styled.div``;\n\nconst TVHeader = styled.div`\n  margin: 1rem 0rem;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst TVLeft = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  padding: 1rem;\n  @media (min-width: 768px) {\n    width: 40%;\n  }\n`;\nconst TVRight = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  width: 100%;\n  padding: 1rem;\n  @media (min-width: 768px) {\n    width: 60%;\n    margin: 0.5rem 3rem 0 0;\n  }\n`;\n\nconst TVBody = styled.div`\n  display: flex;\n  flex-direction: column;\n  @media (min-width: 768px) {\n    flex-direction: row;\n    margin-left: 0.5rem;\n  }\n`;\n\nconst RatingDuration = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  justify-content: space-between;\n  padding: 0rem 1rem;\n  margin: 1rem;\n  @media (min-width: 768px) {\n    max-width: 20rem;\n  }\n`;\n\nconst Duration = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-end;\n  margin: 0;\n`;\n\nconst Seasons = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\nconst Episodes = styled.div`\n  display: flex;\n  opacity: 0.5;\n  margin-top: 0.2rem;\n`;\n\nconst RatingContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  .rating {\n    display: flex;\n    flex-direction: row;\n    margin-right: 0.5rem;\n  }\n  .votes {\n    display: flex;\n    opacity: 0.5;\n    margin-top: 0.2rem;\n  }\n  img {\n    height: 1rem;\n    padding-right: 0.5rem;\n  }\n`;\n\nconst GenresContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  margin: 0.5rem 0rem 1rem 0rem;\n  width: 100%;\n  @media (min-width: 768px) {\n    max-width: 20rem;\n  }\n`;\n\nconst Genre = styled.div`\n  color: #e0dede;\n  background-color: #333;\n  padding: 0.5rem;\n  border: 1px solid transparent;\n  margin: 0.25rem 0.5rem;\n  border-radius: 1rem;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 2px 2px 5px #7676767f;\n  &:hover {\n    background-color: #e0dede;\n    border: 1px solid #333;\n    color: #333;\n    transform: translateY(-5%);\n    cursor: pointer;\n  }\n`;\n\nconst HeaderDiv = styled.div`\n  font-size: 1.5rem;\n  padding: 1.5rem 0rem 0rem 1rem;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: flex-start;\n  @media (min-width: 768px) {\n    padding: 0.5rem 0rem 0rem 1rem;\n  }\n`;\n\nconst TVDescription = styled.div`\n  display: flex;\n  text-align: justify;\n  line-height: 1.5rem;\n  margin-top: 1rem;\n  width: 100%;\n  opacity: 0.8;\n  border-left: 2px solid #333;\n  padding: 0rem 1rem;\n`;\n","export const FILMS_LOADING = \"FILMS_LOADING\";\nexport const FILMS_FAIL = \"FILMS_FAIL\";\nexport const FILMS_SUCCESS = \"FILMS_SUCCESS\";\n\nexport type FilmSearchResultsType = {\n  page: number;\n  total_results: number;\n  total_pages: number;\n  results: [FilmType];\n};\n\nexport type FilmType = {\n  genre_ids: number[];\n  id: number;\n  original_title: string;\n  overview: string;\n  popularity: number;\n  poster_path: string;\n  release_date: string;\n  title: string;\n  backdrop_path: string;\n  video: boolean;\n  vote_average: number;\n  vote_count: number;\n  adult: boolean;\n  original_language: string;\n};\n\nexport interface FilmsLoading {\n  type: typeof FILMS_LOADING;\n  errorMsg: \"\";\n}\nexport interface FilmsFail {\n  type: typeof FILMS_FAIL;\n  errorMsg: \"\";\n}\nexport interface FilmsSuccess {\n  type: typeof FILMS_SUCCESS;\n  payload: FilmSearchResultsType;\n  errorMsg: \"\";\n}\n\nexport type FilmsDispatchTypes = FilmsFail | FilmsLoading | FilmsSuccess;\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { FILMS_FAIL, FILMS_LOADING, FILMS_SUCCESS } from \"./SearchActionTypes\";\n\nconst api_key = \"6650890bc34e6b3eeefaf36590d2a82c\";\n\nexport const GetFilmsList =\n  (entry: string, page: number = 1) =>\n  async (dispatch: Dispatch) => {\n    try {\n      dispatch({\n        type: FILMS_LOADING,\n      });\n\n      const res = await axios.get(\n        `https://api.themoviedb.org/3/search/movie?api_key=${api_key}&language=en-US&query=${entry}&page=${page}&include_adult=false`\n      );\n\n      dispatch({\n        type: FILMS_SUCCESS,\n        payload: res.data,\n      });\n    } catch (error) {\n      dispatch({\n        type: FILMS_FAIL,\n      });\n    }\n  };\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { Film } from \"../components/cards/Film\";\nimport { RootStore } from \"../Store\";\nimport { motion } from \"framer-motion\";\nimport { FilmType } from \"../actions/Search/SearchActionTypes\";\nimport { Pagination } from \"../components/Pagination\";\nimport { useLocation } from \"react-router-dom\";\nimport { Loader } from \"../components/Loader\";\nimport { GetFilmsList } from \"../actions/Search/SearchActions\";\n\nexport const SearchPage = () => {\n  const dispatch = useDispatch();\n\n  const location = useLocation();\n  const pathSearchEntry = location.pathname.split(\"/\")[2];\n  const currentPage = Number(location.pathname.split(\"/\")[3]);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    dispatch(GetFilmsList(pathSearchEntry, currentPage));\n  }, [dispatch, pathSearchEntry, currentPage]);\n\n  const data = useSelector((state: RootStore) => state.searchData.films.data);\n  const dataLoading = useSelector(\n    (state: RootStore) => state.searchData.films.loading\n  );\n\n  return (\n    <>\n      <PageHeader>Search results: </PageHeader>\n      {dataLoading ? (\n        <Loader />\n      ) : (\n        <>\n          {data && data.results && currentPage <= data.total_pages && (\n            <>\n              <FilmsList>\n                <Films>\n                  {data.results.map((film: FilmType) => (\n                    <Film\n                      key={film.id}\n                      id={film.id}\n                      title={film.title}\n                      vote_average={film.vote_average}\n                      poster_path={film.poster_path}\n                      release_date={film.release_date}\n                    />\n                  ))}\n                </Films>\n              </FilmsList>\n              <Pagination\n                currentPage={currentPage}\n                totalPages={data.total_pages}\n                filtration={`search/${pathSearchEntry}`}\n              />\n            </>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nconst PageHeader = styled.h2`\n  padding: 5rem 2rem 2rem 2rem;\n  text-align: left;\n  width: 100%;\n`;\n\nexport const FilmsList = styled(motion.div)`\n  padding: 2rem 5rem;\n  h2 {\n    padding: 5rem 0rem;\n  }\n`;\n\nexport const Films = styled(motion.div)`\n  min-height: 80vh;\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));\n  grid-column-gap: 2rem;\n  grid-row-gap: 4rem;\n  @media (min-width: 768px) {\n    width: 100%;\n  }\n`;\n","import GlobalStyles from \"./components/GlobalStyles\";\nimport { Header } from \"./components/Navigation\";\nimport { Home } from \"./pages/Home\";\nimport {\n  Redirect,\n  Route,\n  Switch,\n  useHistory,\n  useLocation,\n} from \"react-router-dom\";\nimport { TopRated } from \"./pages/TopRated\";\nimport { Upcoming } from \"./pages/Upcoming\";\nimport { TrendingFilms } from \"./pages/TrendingFilms\";\nimport { TrendingPeople } from \"./pages/TrendingPeople\";\nimport { TrendingTV } from \"./pages/TrendingTV\";\nimport { FilmPage } from \"./pages/FilmPage\";\nimport { PersonPage } from \"./pages/PersonPage\";\nimport { TVPage } from \"./pages/TVPage\";\nimport { SearchPage } from \"./pages/SearchPage\";\n\nfunction App() {\n  const location = useLocation();\n\n  return (\n    <div className=\"App\">\n      <GlobalStyles />\n      <Header url={location.pathname} />\n      <Switch>\n        <Route\n          path={\"/search/:entry/:pageNumber\"}\n          exact\n          component={SearchPage}\n        ></Route>\n        <Route path={\"/film/:filmId\"} exact component={FilmPage}></Route>\n        <Route path={\"/person/:personId\"} exact component={PersonPage}></Route>\n        <Route\n          path={\"/film/:filmId/:pageNumber\"}\n          exact\n          component={FilmPage}\n        ></Route>\n        <Route path={\"/tv/:tvId/:pageNumber\"} exact component={TVPage}></Route>\n        <Route path={\"/popular/:pageNumber\"} exact component={Home}></Route>\n        <Route path={\"/top_rated/:pageNumber\"} exact component={TopRated} />\n        <Route\n          path={\"/trending_films/:pageNumber\"}\n          exact\n          component={TrendingFilms}\n        />\n        <Route\n          path={\"/trending_people/:pageNumber\"}\n          exact\n          component={TrendingPeople}\n        />\n        <Route\n          path={\"/trending_tvs/:pageNumber\"}\n          exact\n          component={TrendingTV}\n        />\n        <Route path={\"/upcoming/:pageNumber\"} exact component={Upcoming} />\n        <Route path={\"/film-search-2/\"} exact>\n          <Redirect to={\"/popular/1\"} />\n        </Route>\n        <Route exact path={\"/\"}>\n          <Redirect to={\"/popular/1\"} />\n        </Route>\n        {/* <Redirect to={\"popular/1\"} /> */}\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\n  CreditsDispatchTypes,\n  CREDITS_SUCCESS,\n  CREDITS_LOADING,\n  CREDITS_FAIL,\n  CreditsType,\n} from \"../actions/IndividualFilm/CreditsActionTypes\";\n\ninterface DefaultStateI {\n  loading: boolean;\n  data?: { [id: number]: CreditsType };\n}\n\nconst defaultState: DefaultStateI = {\n  loading: false,\n};\n\nconst creditsReducer = (\n  state: DefaultStateI = defaultState,\n  action: CreditsDispatchTypes\n): DefaultStateI => {\n  switch (action.type) {\n    case CREDITS_FAIL:\n      return {\n        ...state,\n        loading: false,\n      };\n    case CREDITS_LOADING:\n      return {\n        ...state,\n        loading: true,\n      };\n    case CREDITS_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        data: {\n          ...state.data,\n          [action.filmId]: action.payload,\n        },\n      };\n    default:\n      return state;\n  }\n};\n\nexport default creditsReducer;\n","import {\n  ImagesDispatchTypes,\n  IMAGES_SUCCESS,\n  IMAGES_LOADING,\n  IMAGES_FAIL,\n  ImagesType,\n} from \"../actions/IndividualFilm/ImagesActionTypes\";\n\ninterface DefaultStateI {\n  loading: boolean;\n  data?: { [id: number]: ImagesType };\n}\n\nconst defaultState: DefaultStateI = {\n  loading: false,\n};\n\nconst postersReducer = (\n  state: DefaultStateI = defaultState,\n  action: ImagesDispatchTypes\n): DefaultStateI => {\n  switch (action.type) {\n    case IMAGES_FAIL:\n      return {\n        ...state,\n        loading: false,\n      };\n    case IMAGES_LOADING:\n      return {\n        ...state,\n        loading: true,\n      };\n    case IMAGES_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        data: {\n          ...state.data,\n          [action.filmId]: action.payload,\n        },\n      };\n    default:\n      return state;\n  }\n};\n\nexport default postersReducer;\n","import {\n  IndividualFilmDispatchTypes,\n  INDIVIDUAL_FILM_FAIL,\n  INDIVIDUAL_FILM_LOADING,\n  INDIVIDUAL_FILM_SUCCESS,\n  IndividualFilmType,\n} from \"../actions/IndividualFilm/IndividualFilmActionTypes\";\n\ninterface DefaultStateI {\n  loading: boolean;\n  data?: { [id: number]: IndividualFilmType };\n}\n\nconst defaultState: DefaultStateI = {\n  loading: false,\n};\n\nconst individualFilmReducer = (\n  state: DefaultStateI = defaultState,\n  action: IndividualFilmDispatchTypes\n): DefaultStateI => {\n  switch (action.type) {\n    case INDIVIDUAL_FILM_FAIL:\n      return {\n        ...state,\n        loading: false,\n      };\n    case INDIVIDUAL_FILM_LOADING:\n      return {\n        ...state,\n        loading: true,\n      };\n    case INDIVIDUAL_FILM_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        data: {\n          ...state.data,\n          [action.filmId]: action.payload,\n        },\n      };\n    default:\n      return state;\n  }\n};\n\nexport default individualFilmReducer;\n","import {\n  IndividualPersonDispatchTypes,\n  INDIVIDUAL_PERSON_SUCCESS,\n  INDIVIDUAL_PERSON_LOADING,\n  INDIVIDUAL_PERSON_FAIL,\n  IndividualPersonType,\n} from \"../../actions/IndividualPerson/IndividualPersonActionTypes\";\n\ninterface DefaultStateI {\n  loading: boolean;\n  data?: { [id: number]: IndividualPersonType };\n}\n\nconst defaultState: DefaultStateI = {\n  loading: false,\n};\n\nconst individualPersonReducer = (\n  state: DefaultStateI = defaultState,\n  action: IndividualPersonDispatchTypes\n): DefaultStateI => {\n  switch (action.type) {\n    case INDIVIDUAL_PERSON_FAIL:\n      return {\n        ...state,\n        loading: false,\n      };\n    case INDIVIDUAL_PERSON_LOADING:\n      return {\n        ...state,\n        loading: true,\n      };\n    case INDIVIDUAL_PERSON_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        data: {\n          ...state.data,\n          [action.personId]: action.payload,\n        },\n      };\n    default:\n      return state;\n  }\n};\n\nexport default individualPersonReducer;\n","import {\n  IndividualPersonExIdDispatchTypes,\n  INDIVIDUAL_PERSON_EXID_SUCCESS,\n  INDIVIDUAL_PERSON_EXID_LOADING,\n  INDIVIDUAL_PERSON_EXID_FAIL,\n  IndividualPersonExIdType,\n} from \"../../actions/IndividualPerson/PersonExternalIdsActionTypes\";\n\ninterface DefaultStateI {\n  loading: boolean;\n  data?: { [id: number]: IndividualPersonExIdType };\n}\n\nconst defaultState: DefaultStateI = {\n  loading: false,\n};\n\nconst personExternalIdsReducer = (\n  state: DefaultStateI = defaultState,\n  action: IndividualPersonExIdDispatchTypes\n): DefaultStateI => {\n  switch (action.type) {\n    case INDIVIDUAL_PERSON_EXID_FAIL:\n      return {\n        ...state,\n        loading: false,\n      };\n    case INDIVIDUAL_PERSON_EXID_LOADING:\n      return {\n        ...state,\n        loading: true,\n      };\n    case INDIVIDUAL_PERSON_EXID_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        data: {\n          ...state.data,\n          [action.personId]: action.payload,\n        },\n      };\n    default:\n      return state;\n  }\n};\n\nexport default personExternalIdsReducer;\n","import {\n  IndividualPersonImagesDispatchTypes,\n  INDIVIDUAL_PERSON_IMAGES_FAIL,\n  INDIVIDUAL_PERSON_IMAGES_SUCCESS,\n  INDIVIDUAL_PERSON_IMAGES_LOADING,\n  IndividualPersonImagesType,\n} from \"../../actions/IndividualPerson/PersonImagesActionTypes\";\n\ninterface DefaultStateI {\n  loading: boolean;\n  data?: { [id: number]: IndividualPersonImagesType };\n}\n\nconst defaultState: DefaultStateI = {\n  loading: false,\n};\n\nconst personImagesReducer = (\n  state: DefaultStateI = defaultState,\n  action: IndividualPersonImagesDispatchTypes\n): DefaultStateI => {\n  switch (action.type) {\n    case INDIVIDUAL_PERSON_IMAGES_FAIL:\n      return {\n        ...state,\n        loading: false,\n      };\n    case INDIVIDUAL_PERSON_IMAGES_LOADING:\n      return {\n        ...state,\n        loading: true,\n      };\n    case INDIVIDUAL_PERSON_IMAGES_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        data: {\n          ...state.data,\n          [action.personId]: action.payload,\n        },\n      };\n    default:\n      return state;\n  }\n};\n\nexport default personImagesReducer;\n","import {\n  IndividualPersonMovieCreditsDispatchTypes,\n  INDIVIDUAL_PERSON_MOVIE_CREDITS_SUCCESS,\n  INDIVIDUAL_PERSON_MOVIE_CREDITS_LOADING,\n  INDIVIDUAL_PERSON_MOVIE_CREDITS_FAIL,\n  IndividualPersonMovieCreditsType,\n} from \"../../actions/IndividualPerson/PersonMovieCreditsActionTypes\";\n\ninterface DefaultStateI {\n  loading: boolean;\n  data?: { [id: number]: IndividualPersonMovieCreditsType };\n}\n\nconst defaultState: DefaultStateI = {\n  loading: false,\n};\n\nconst personMoviesReducer = (\n  state: DefaultStateI = defaultState,\n  action: IndividualPersonMovieCreditsDispatchTypes\n): DefaultStateI => {\n  switch (action.type) {\n    case INDIVIDUAL_PERSON_MOVIE_CREDITS_FAIL:\n      return {\n        ...state,\n        loading: false,\n      };\n    case INDIVIDUAL_PERSON_MOVIE_CREDITS_LOADING:\n      return {\n        ...state,\n        loading: true,\n      };\n    case INDIVIDUAL_PERSON_MOVIE_CREDITS_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        data: {\n          ...state.data,\n          [action.personId]: action.payload,\n        },\n      };\n    default:\n      return state;\n  }\n};\n\nexport default personMoviesReducer;\n","import {\n  IndividualPersonTvCreditsDispatchTypes,\n  INDIVIDUAL_PERSON_TV_CREDITS_SUCCESS,\n  INDIVIDUAL_PERSON_TV_CREDITS_LOADING,\n  INDIVIDUAL_PERSON_TV_CREDITS_FAIL,\n  IndividualPersonTvCreditsType,\n} from \"../../actions/IndividualPerson/PersonTVCreditsActionTypes\";\n\ninterface DefaultStateI {\n  loading: boolean;\n  data?: { [id: number]: IndividualPersonTvCreditsType };\n}\n\nconst defaultState: DefaultStateI = {\n  loading: false,\n};\n\nconst personTVsReducer = (\n  state: DefaultStateI = defaultState,\n  action: IndividualPersonTvCreditsDispatchTypes\n): DefaultStateI => {\n  switch (action.type) {\n    case INDIVIDUAL_PERSON_TV_CREDITS_FAIL:\n      return {\n        ...state,\n        loading: false,\n      };\n    case INDIVIDUAL_PERSON_TV_CREDITS_LOADING:\n      return {\n        ...state,\n        loading: true,\n      };\n    case INDIVIDUAL_PERSON_TV_CREDITS_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        data: {\n          ...state.data,\n          [action.personId]: action.payload,\n        },\n      };\n    default:\n      return state;\n  }\n};\n\nexport default personTVsReducer;\n","import { combineReducers } from \"redux\";\nimport individualPersonReducer from \"./IndividualPersonReducer\";\nimport personExternalIdsReducer from \"./PersonExternalIdsReducer\";\nimport personImagesReducer from \"./PersonImagesReducer\";\nimport personMoviesReducer from \"./PersonMoviesReducer\";\nimport personTVsReducer from \"./PersonTVsReducer\";\n\nconst RootPersonReducer = combineReducers({\n  personData: individualPersonReducer,\n  personImages: personImagesReducer,\n  personTVs: personTVsReducer,\n  personMovies: personMoviesReducer,\n  personExternalIds: personExternalIdsReducer,\n});\n\nexport default RootPersonReducer;\n","import {\n  IndividualTVDispatchTypes,\n  INDIVIDUAL_TV_FAIL,\n  INDIVIDUAL_TV_LOADING,\n  INDIVIDUAL_TV_SUCCESS,\n  IndividualTVType,\n} from \"../../actions/IndividualTV/IndividualTVActionTypes\";\n\ninterface DefaultStateI {\n  loading: boolean;\n  data?: { [id: number]: IndividualTVType };\n}\n\nconst defaultState: DefaultStateI = {\n  loading: false,\n};\n\nconst individualTVReducer = (\n  state: DefaultStateI = defaultState,\n  action: IndividualTVDispatchTypes\n): DefaultStateI => {\n  switch (action.type) {\n    case INDIVIDUAL_TV_FAIL:\n      return {\n        ...state,\n        loading: false,\n      };\n    case INDIVIDUAL_TV_LOADING:\n      return {\n        ...state,\n        loading: true,\n      };\n    case INDIVIDUAL_TV_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        data: {\n          ...state.data,\n          [action.tvId]: action.payload,\n        },\n      };\n    default:\n      return state;\n  }\n};\n\nexport default individualTVReducer;\n","import {\n  PopularFilmsDispatchTypes,\n  POPULAR_FILMS_FAIL,\n  POPULAR_FILMS_SUCCESS,\n  POPULAR_FILMS_LOADING,\n  FetchedPopularFilmsType,\n} from \"../actions/PopularFilms/PopularFilmsActionTypes\";\n\ninterface DefaultStateI {\n  loading: boolean;\n  popular?: FetchedPopularFilmsType;\n}\n\nconst defaultState: DefaultStateI = {\n  loading: false,\n};\n\nconst popularFilmsReducer = (\n  state: DefaultStateI = defaultState,\n  action: PopularFilmsDispatchTypes\n): DefaultStateI => {\n  switch (action.type) {\n    case POPULAR_FILMS_FAIL:\n      return {\n        loading: false,\n      };\n    case POPULAR_FILMS_LOADING:\n      return {\n        loading: true,\n      };\n    case POPULAR_FILMS_SUCCESS:\n      return {\n        loading: false,\n        popular: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default popularFilmsReducer;\n","import {\n  RecommendedFilmsDispatchTypes,\n  RECOMMENDED_FILMS_SUCCESS,\n  RECOMMENDED_FILMS_LOADING,\n  RECOMMENDED_FILMS_FAIL,\n  RecommendedFilmsType,\n} from \"../actions/IndividualFilm/RecommendedFilmsActionTypes\";\n\ninterface DefaultStateI {\n  loading: boolean;\n  data?: { [id: number]: RecommendedFilmsType };\n}\n\nconst defaultState: DefaultStateI = {\n  loading: false,\n};\n\nconst recommendedFilmsReducer = (\n  state: DefaultStateI = defaultState,\n  action: RecommendedFilmsDispatchTypes\n): DefaultStateI => {\n  switch (action.type) {\n    case RECOMMENDED_FILMS_FAIL:\n      return {\n        ...state,\n        loading: false,\n      };\n    case RECOMMENDED_FILMS_LOADING:\n      return {\n        ...state,\n        loading: true,\n      };\n    case RECOMMENDED_FILMS_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        data: {\n          ...state.data,\n          [action.filmId]: action.payload,\n        },\n      };\n    default:\n      return state;\n  }\n};\n\nexport default recommendedFilmsReducer;\n","import {\n  FilmsDispatchTypes,\n  FilmSearchResultsType,\n  FILMS_FAIL,\n  FILMS_LOADING,\n  FILMS_SUCCESS,\n} from \"../../actions/Search/SearchActionTypes\";\n\ninterface DefaultStateI {\n  loading: boolean;\n  data?: FilmSearchResultsType;\n}\n\nconst defaultState: DefaultStateI = {\n  loading: false,\n};\n\nconst filmsSearchReducer = (\n  state: DefaultStateI = defaultState,\n  action: FilmsDispatchTypes\n) => {\n  switch (action.type) {\n    case FILMS_FAIL:\n      return {\n        loading: false,\n      };\n    case FILMS_LOADING:\n      return {\n        loading: true,\n      };\n    case FILMS_SUCCESS:\n      return {\n        loading: false,\n        data: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default filmsSearchReducer;\n","import { combineReducers } from \"redux\";\nimport filmsSearchReducer from \"./FilmSearchReducer\";\n\nconst RootSearchReducer = combineReducers({\n  films: filmsSearchReducer,\n});\n\nexport default RootSearchReducer;\n","import {\n  TopRatedFilmsDispatchTypes,\n  TOP_RATED_FILMS_FAIL,\n  TOP_RATED_FILMS_SUCCESS,\n  TOP_RATED_FILMS_LOADING,\n  FetchedTopRatedFilmsType,\n} from \"../actions/TopRatedFilms/TopRatedFilmsActionTypes\";\n\ninterface DefaultStateI {\n  loading: boolean;\n  topRated?: FetchedTopRatedFilmsType;\n}\n\nconst defaultState: DefaultStateI = {\n  loading: false,\n};\n\nconst topRatedFilmsReducer = (\n  state: DefaultStateI = defaultState,\n  action: TopRatedFilmsDispatchTypes\n): DefaultStateI => {\n  switch (action.type) {\n    case TOP_RATED_FILMS_FAIL:\n      return {\n        loading: false,\n      };\n    case TOP_RATED_FILMS_LOADING:\n      return {\n        loading: true,\n      };\n    case TOP_RATED_FILMS_SUCCESS:\n      return {\n        loading: false,\n        topRated: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default topRatedFilmsReducer;\n","import {\n  TrendingFilmsDispatchTypes,\n  TRENDING_FILMS_FAIL,\n  TRENDING_FILMS_LOADING,\n  TRENDING_FILMS_SUCCESS,\n  FetchedTrendingFilmsType,\n} from \"../actions/Trending/TrendingActionTypes\";\n\ninterface DefaultStateI {\n  loading: boolean;\n  trendingFilms?: FetchedTrendingFilmsType;\n}\n\nconst defaultState: DefaultStateI = {\n  loading: false,\n};\n\nconst trendingFilmsReducer = (\n  state: DefaultStateI = defaultState,\n  action: TrendingFilmsDispatchTypes\n): DefaultStateI => {\n  switch (action.type) {\n    case TRENDING_FILMS_FAIL:\n      return {\n        loading: false,\n      };\n    case TRENDING_FILMS_LOADING:\n      return {\n        loading: true,\n      };\n    case TRENDING_FILMS_SUCCESS:\n      return {\n        loading: false,\n        trendingFilms: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default trendingFilmsReducer;\n","import {\n  TrendingPersonDispatchTypes,\n  TRENDING_PERSON_FAIL,\n  TRENDING_PERSON_LOADING,\n  TRENDING_PERSON_SUCCESS,\n  FetchedTrendingPersonType,\n} from \"../actions/Trending/TrendingActionTypes\";\n\ninterface DefaultStateI {\n  loading: boolean;\n  trendingPersons?: FetchedTrendingPersonType;\n}\n\nconst defaultState: DefaultStateI = {\n  loading: false,\n};\n\nconst trendingPersonReducer = (\n  state: DefaultStateI = defaultState,\n  action: TrendingPersonDispatchTypes\n): DefaultStateI => {\n  switch (action.type) {\n    case TRENDING_PERSON_FAIL:\n      return {\n        loading: false,\n      };\n    case TRENDING_PERSON_LOADING:\n      return {\n        loading: true,\n      };\n    case TRENDING_PERSON_SUCCESS:\n      return {\n        loading: false,\n        trendingPersons: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default trendingPersonReducer;\n","import {\n  TrendingTvDispatchTypes,\n  TRENDING_TV_FAIL,\n  TRENDING_TV_LOADING,\n  TRENDING_TV_SUCCESS,\n  FetchedTrendingTvType,\n} from \"../actions/Trending/TrendingActionTypes\";\n\ninterface DefaultStateI {\n  loading: boolean;\n  trendingTV?: FetchedTrendingTvType;\n}\n\nconst defaultState: DefaultStateI = {\n  loading: false,\n};\n\nconst trendingTVReducer = (\n  state: DefaultStateI = defaultState,\n  action: TrendingTvDispatchTypes\n): DefaultStateI => {\n  switch (action.type) {\n    case TRENDING_TV_FAIL:\n      return {\n        loading: false,\n      };\n    case TRENDING_TV_LOADING:\n      return {\n        loading: true,\n      };\n    case TRENDING_TV_SUCCESS:\n      return {\n        loading: false,\n        trendingTV: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default trendingTVReducer;\n","import {\n  UpcomingFilmsDispatchTypes,\n  UPCOMING_FILMS_FAIL,\n  UPCOMING_FILMS_SUCCESS,\n  UPCOMING_FILMS_LOADING,\n  FetchedUpcomingFilmsType,\n} from \"../actions/UpcomingFilms/UpcomingFilmsActionTypes\";\n\ninterface DefaultStateI {\n  loading: boolean;\n  upcoming?: FetchedUpcomingFilmsType;\n}\n\nconst defaultState: DefaultStateI = {\n  loading: false,\n};\n\nconst upcomingFilmsReducer = (\n  state: DefaultStateI = defaultState,\n  action: UpcomingFilmsDispatchTypes\n): DefaultStateI => {\n  switch (action.type) {\n    case UPCOMING_FILMS_FAIL:\n      return {\n        loading: false,\n      };\n    case UPCOMING_FILMS_LOADING:\n      return {\n        loading: true,\n      };\n    case UPCOMING_FILMS_SUCCESS:\n      return {\n        loading: false,\n        upcoming: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default upcomingFilmsReducer;\n","import { combineReducers } from \"redux\";\nimport creditsReducer from \"./CreditsReducer\";\nimport postersReducer from \"./ImagesReducer\";\nimport individualFilmReducer from \"./IndividualFilmReducer\";\nimport RootPersonReducer from \"./IndividualPersonReducers/RootPersonReducer\";\nimport individualTVReducer from \"./IndividualTVReducers/IndividualTVReducer\";\nimport popularFilmsReducer from \"./PopularFilmsReducer\";\nimport recommendedFilmsReducer from \"./RecommendedFilmsReducer\";\nimport RootSearchReducer from \"./SearchReducers/RootSearchReducer\";\nimport topRatedFilmsReducer from \"./TopRatedFilmsReduces\";\nimport trendingFilmsReducer from \"./TrendingFilmsReducer\";\nimport trendingPersonReducer from \"./TrendingPersonReducer\";\nimport trendingTVReducer from \"./TrendingTVReducer\";\nimport upcomingFilmsReducer from \"./UpcomingFilmsReducer\";\n\nconst RootReducer = combineReducers({\n  popularFilms: popularFilmsReducer,\n  topRatedFilms: topRatedFilmsReducer,\n  upcomingFilms: upcomingFilmsReducer,\n  trendingFilms: trendingFilmsReducer,\n  trendingPeople: trendingPersonReducer,\n  trendingTV: trendingTVReducer,\n  individualFilms: individualFilmReducer,\n  posters: postersReducer,\n  credits: creditsReducer,\n  recommendedFilms: recommendedFilmsReducer,\n  individualPerson: RootPersonReducer,\n  individualTV: individualTVReducer,\n  searchData: RootSearchReducer,\n});\n\nexport default RootReducer;\n","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport RootReducer from \"./reducers/RootReducer\";\nimport thunk from \"redux-thunk\";\n\nconst store = createStore(\n  RootReducer,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n\nexport type RootStore = ReturnType<typeof RootReducer>;\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from \"./Store\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}